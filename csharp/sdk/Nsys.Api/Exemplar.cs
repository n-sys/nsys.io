// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: nsys.io/api/exemplar/exemplar.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nsys.Api.Exemplar {

  /// <summary>Holder for reflection information generated from nsys.io/api/exemplar/exemplar.proto</summary>
  public static partial class ExemplarReflection {

    #region Descriptor
    /// <summary>File descriptor for nsys.io/api/exemplar/exemplar.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ExemplarReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNuc3lzLmlvL2FwaS9leGVtcGxhci9leGVtcGxhci5wcm90bxIRbnN5cy5h",
            "cGkuZXhlbXBsYXIaI2dvb2dsZS9sb25ncnVubmluZy9vcGVyYXRpb25zLnBy",
            "b3RvGhtnb29nbGUvcHJvdG9idWYvZW1wdHkucHJvdG8aH2dvb2dsZS9wcm90",
            "b2J1Zi90aW1lc3RhbXAucHJvdG8aGWdvb2dsZS9wcm90b2J1Zi9hbnkucHJv",
            "dG8aHm5zeXMuaW8vYXBpL250eXBlcy9maWVsZC5wcm90bxohbnN5cy5pby9h",
            "cGkvbnR5cGVzL2dlb21ldHJ5LnByb3RvGiVuc3lzLmlvL2FwaS9udHlwZXMv",
            "aW1hZ2VfbnR5cGVzLnByb3RvGihuc3lzLmlvL2FwaS9udHlwZXMvZXhlbXBs",
            "YXJfbnR5cGVzLnByb3RvInEKEFVwbG9hZFBkZlJlcXVlc3QSDAoEbmFtZRgB",
            "IAEoCRIUCgxwYWdlX251bWJlcnMYAiADKAUSDAoEZGF0YRgDIAEoDBIrCghs",
            "YW5ndWFnZRgEIAEoDjIZLm5zeXMuYXBpLm50eXBlcy5MYW5ndWFnZSKFAQoR",
            "VXBsb2FkUGRmUmVzcG9uc2USDAoEbmFtZRgBIAEoCRIxCg9wcm9jZXNzZWRf",
            "cGFnZXMYAiADKAsyGC5uc3lzLmFwaS5udHlwZXMuUGRmUGFnZRIvCgtleHBp",
            "cmVfdGltZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiNgoR",
            "R2V0UGRmUGFnZVJlcXVlc3QSDAoEbmFtZRgBIAEoCRITCgtwYWdlX251bWJl",
            "chgCIAEoBSI8ChJHZXRQZGZQYWdlUmVzcG9uc2USJgoEcGFnZRgBIAEoCzIY",
            "Lm5zeXMuYXBpLm50eXBlcy5QZGZQYWdlIr8BChVDcmVhdGVFeGVtcGxhclJl",
            "cXVlc3QSDAoEbmFtZRgBIAEoCRITCgtkZXNjcmlwdGlvbhgCIAEoCRImCght",
            "ZXRhZGF0YRgDIAEoCzIULmdvb2dsZS5wcm90b2J1Zi5BbnkSGQoRaW1hZ2Vf",
            "b3JfcGRmX25hbWUYBCABKAkSEwoLcGFnZV9udW1iZXIYBSABKAUSKwoIbGFu",
            "Z3VhZ2UYBiABKA4yGS5uc3lzLmFwaS5udHlwZXMuTGFuZ3VhZ2UiJgoWQ3Jl",
            "YXRlRXhlbXBsYXJSZXNwb25zZRIMCgRuYW1lGAEgASgJIl8KHVVwbG9hZERp",
            "bWVuc2lvbmVkSW1hZ2VSZXF1ZXN0EgwKBG5hbWUYASABKAkSMAoFaW1hZ2UY",
            "AiABKAsyIS5uc3lzLmFwaS5udHlwZXMuRGltZW5zaW9uZWRJbWFnZSJfCh5V",
            "cGxvYWREaW1lbnNpb25lZEltYWdlUmVzcG9uc2USDAoEbmFtZRgBIAEoCRIv",
            "CgtleHBpcmVfdGltZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3Rh",
            "bXAiQgoSR2V0RXhlbXBsYXJSZXF1ZXN0EhUKDWV4ZW1wbGFyX25hbWUYASAB",
            "KAkSFQoNaW5jbHVkZV9pbWFnZRgCIAEoCCJCChNHZXRFeGVtcGxhclJlc3Bv",
            "bnNlEisKCGV4ZW1wbGFyGAEgASgLMhkubnN5cy5hcGkubnR5cGVzLkV4ZW1w",
            "bGFyIhYKFExpc3RFeGVtcGxhcnNSZXF1ZXN0IkUKFUxpc3RFeGVtcGxhcnNS",
            "ZXNwb25zZRIsCglleGVtcGxhcnMYASADKAsyGS5uc3lzLmFwaS5udHlwZXMu",
            "RXhlbXBsYXIiJQoVRGVsZXRlRXhlbXBsYXJSZXF1ZXN0EgwKBG5hbWUYASAB",
            "KAkiUgoSQ3JlYXRlRmllbGRSZXF1ZXN0EhUKDWV4ZW1wbGFyX25hbWUYASAB",
            "KAkSJQoFZmllbGQYAiABKAsyFi5uc3lzLmFwaS5udHlwZXMuRmllbGQiQAoT",
            "Q3JlYXRlRmllbGRSZXNwb25zZRIVCg1leGVtcGxhcl9uYW1lGAEgASgJEhIK",
            "CmZpZWxkX25hbWUYAiABKAkiOQoSRGVsZXRlRmllbGRSZXF1ZXN0EhUKDWV4",
            "ZW1wbGFyX25hbWUYASABKAkSDAoEbmFtZRgCIAEoCSIqChFMaXN0RmllbGRz",
            "UmVxdWVzdBIVCg1leGVtcGxhcl9uYW1lGAEgASgJIjwKEkxpc3RGaWVsZHNS",
            "ZXNwb25zZRImCgZmaWVsZHMYASADKAsyFi5uc3lzLmFwaS5udHlwZXMuRmll",
            "bGQy9w4KCUV4ZW1wbGFycxJ/ChZVcGxvYWREaW1lbnNpb25lZEltYWdlEjAu",
            "bnN5cy5hcGkuZXhlbXBsYXIuVXBsb2FkRGltZW5zaW9uZWRJbWFnZVJlcXVl",
            "c3QaMS5uc3lzLmFwaS5leGVtcGxhci5VcGxvYWREaW1lbnNpb25lZEltYWdl",
            "UmVzcG9uc2UiABJuChlVcGxvYWREaW1lbnNpb25lZEltYWdlTFJPEjAubnN5",
            "cy5hcGkuZXhlbXBsYXIuVXBsb2FkRGltZW5zaW9uZWRJbWFnZVJlcXVlc3Qa",
            "HS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uIgASWAoJVXBsb2FkUGRm",
            "EiMubnN5cy5hcGkuZXhlbXBsYXIuVXBsb2FkUGRmUmVxdWVzdBokLm5zeXMu",
            "YXBpLmV4ZW1wbGFyLlVwbG9hZFBkZlJlc3BvbnNlIgASVAoMVXBsb2FkUGRm",
            "TFJPEiMubnN5cy5hcGkuZXhlbXBsYXIuVXBsb2FkUGRmUmVxdWVzdBodLmdv",
            "b2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24iABJbCgpHZXRQZGZQYWdlEiQu",
            "bnN5cy5hcGkuZXhlbXBsYXIuR2V0UGRmUGFnZVJlcXVlc3QaJS5uc3lzLmFw",
            "aS5leGVtcGxhci5HZXRQZGZQYWdlUmVzcG9uc2UiABJWCg1HZXRQZGZQYWdl",
            "TFJPEiQubnN5cy5hcGkuZXhlbXBsYXIuR2V0UGRmUGFnZVJlcXVlc3QaHS5n",
            "b29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uIgASZwoOQ3JlYXRlRXhlbXBs",
            "YXISKC5uc3lzLmFwaS5leGVtcGxhci5DcmVhdGVFeGVtcGxhclJlcXVlc3Qa",
            "KS5uc3lzLmFwaS5leGVtcGxhci5DcmVhdGVFeGVtcGxhclJlc3BvbnNlIgAS",
            "XgoRQ3JlYXRlRXhlbXBsYXJMUk8SKC5uc3lzLmFwaS5leGVtcGxhci5DcmVh",
            "dGVFeGVtcGxhclJlcXVlc3QaHS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0",
            "aW9uIgASZAoNTGlzdEV4ZW1wbGFycxInLm5zeXMuYXBpLmV4ZW1wbGFyLkxp",
            "c3RFeGVtcGxhcnNSZXF1ZXN0GigubnN5cy5hcGkuZXhlbXBsYXIuTGlzdEV4",
            "ZW1wbGFyc1Jlc3BvbnNlIgASXAoQTGlzdEV4ZW1wbGFyc0xSTxInLm5zeXMu",
            "YXBpLmV4ZW1wbGFyLkxpc3RFeGVtcGxhcnNSZXF1ZXN0Gh0uZ29vZ2xlLmxv",
            "bmdydW5uaW5nLk9wZXJhdGlvbiIAEl4KC0dldEV4ZW1wbGFyEiUubnN5cy5h",
            "cGkuZXhlbXBsYXIuR2V0RXhlbXBsYXJSZXF1ZXN0GiYubnN5cy5hcGkuZXhl",
            "bXBsYXIuR2V0RXhlbXBsYXJSZXNwb25zZSIAElgKDkdldEV4ZW1wbGFyTFJP",
            "EiUubnN5cy5hcGkuZXhlbXBsYXIuR2V0RXhlbXBsYXJSZXF1ZXN0Gh0uZ29v",
            "Z2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiIAElQKDkRlbGV0ZUV4ZW1wbGFy",
            "EigubnN5cy5hcGkuZXhlbXBsYXIuRGVsZXRlRXhlbXBsYXJSZXF1ZXN0GhYu",
            "Z29vZ2xlLnByb3RvYnVmLkVtcHR5IgASXgoRRGVsZXRlRXhlbXBsYXJMUk8S",
            "KC5uc3lzLmFwaS5leGVtcGxhci5EZWxldGVFeGVtcGxhclJlcXVlc3QaHS5n",
            "b29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uIgASXgoLQ3JlYXRlRmllbGQS",
            "JS5uc3lzLmFwaS5leGVtcGxhci5DcmVhdGVGaWVsZFJlcXVlc3QaJi5uc3lz",
            "LmFwaS5leGVtcGxhci5DcmVhdGVGaWVsZFJlc3BvbnNlIgASWAoOQ3JlYXRl",
            "RmllbGRMUk8SJS5uc3lzLmFwaS5leGVtcGxhci5DcmVhdGVGaWVsZFJlcXVl",
            "c3QaHS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uIgASTgoLRGVsZXRl",
            "RmllbGQSJS5uc3lzLmFwaS5leGVtcGxhci5EZWxldGVGaWVsZFJlcXVlc3Qa",
            "Fi5nb29nbGUucHJvdG9idWYuRW1wdHkiABJYCg5EZWxldGVGaWVsZExSTxIl",
            "Lm5zeXMuYXBpLmV4ZW1wbGFyLkRlbGV0ZUZpZWxkUmVxdWVzdBodLmdvb2ds",
            "ZS5sb25ncnVubmluZy5PcGVyYXRpb24iABJbCgpMaXN0RmllbGRzEiQubnN5",
            "cy5hcGkuZXhlbXBsYXIuTGlzdEZpZWxkc1JlcXVlc3QaJS5uc3lzLmFwaS5l",
            "eGVtcGxhci5MaXN0RmllbGRzUmVzcG9uc2UiABJWCg1MaXN0RmllbGRzTFJP",
            "EiQubnN5cy5hcGkuZXhlbXBsYXIuTGlzdEZpZWxkc1JlcXVlc3QaHS5nb29n",
            "bGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uIgBCFloUbnN5cy5pby9hcGkvZXhl",
            "bXBsYXJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.LongRunning.OperationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::Nsys.Api.Ntypes.FieldReflection.Descriptor, global::Nsys.Api.Ntypes.GeometryReflection.Descriptor, global::Nsys.Api.Ntypes.ImageNtypesReflection.Descriptor, global::Nsys.Api.Ntypes.ExemplarNtypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nsys.Api.Exemplar.UploadPdfRequest), global::Nsys.Api.Exemplar.UploadPdfRequest.Parser, new[]{ "Name", "PageNumbers", "Data", "Language" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nsys.Api.Exemplar.UploadPdfResponse), global::Nsys.Api.Exemplar.UploadPdfResponse.Parser, new[]{ "Name", "ProcessedPages", "ExpireTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nsys.Api.Exemplar.GetPdfPageRequest), global::Nsys.Api.Exemplar.GetPdfPageRequest.Parser, new[]{ "Name", "PageNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nsys.Api.Exemplar.GetPdfPageResponse), global::Nsys.Api.Exemplar.GetPdfPageResponse.Parser, new[]{ "Page" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nsys.Api.Exemplar.CreateExemplarRequest), global::Nsys.Api.Exemplar.CreateExemplarRequest.Parser, new[]{ "Name", "Description", "Metadata", "ImageOrPdfName", "PageNumber", "Language" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nsys.Api.Exemplar.CreateExemplarResponse), global::Nsys.Api.Exemplar.CreateExemplarResponse.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nsys.Api.Exemplar.UploadDimensionedImageRequest), global::Nsys.Api.Exemplar.UploadDimensionedImageRequest.Parser, new[]{ "Name", "Image" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nsys.Api.Exemplar.UploadDimensionedImageResponse), global::Nsys.Api.Exemplar.UploadDimensionedImageResponse.Parser, new[]{ "Name", "ExpireTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nsys.Api.Exemplar.GetExemplarRequest), global::Nsys.Api.Exemplar.GetExemplarRequest.Parser, new[]{ "ExemplarName", "IncludeImage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nsys.Api.Exemplar.GetExemplarResponse), global::Nsys.Api.Exemplar.GetExemplarResponse.Parser, new[]{ "Exemplar" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nsys.Api.Exemplar.ListExemplarsRequest), global::Nsys.Api.Exemplar.ListExemplarsRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nsys.Api.Exemplar.ListExemplarsResponse), global::Nsys.Api.Exemplar.ListExemplarsResponse.Parser, new[]{ "Exemplars" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nsys.Api.Exemplar.DeleteExemplarRequest), global::Nsys.Api.Exemplar.DeleteExemplarRequest.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nsys.Api.Exemplar.CreateFieldRequest), global::Nsys.Api.Exemplar.CreateFieldRequest.Parser, new[]{ "ExemplarName", "Field" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nsys.Api.Exemplar.CreateFieldResponse), global::Nsys.Api.Exemplar.CreateFieldResponse.Parser, new[]{ "ExemplarName", "FieldName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nsys.Api.Exemplar.DeleteFieldRequest), global::Nsys.Api.Exemplar.DeleteFieldRequest.Parser, new[]{ "ExemplarName", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nsys.Api.Exemplar.ListFieldsRequest), global::Nsys.Api.Exemplar.ListFieldsRequest.Parser, new[]{ "ExemplarName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nsys.Api.Exemplar.ListFieldsResponse), global::Nsys.Api.Exemplar.ListFieldsResponse.Parser, new[]{ "Fields" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class UploadPdfRequest : pb::IMessage<UploadPdfRequest> {
    private static readonly pb::MessageParser<UploadPdfRequest> _parser = new pb::MessageParser<UploadPdfRequest>(() => new UploadPdfRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadPdfRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nsys.Api.Exemplar.ExemplarReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadPdfRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadPdfRequest(UploadPdfRequest other) : this() {
      name_ = other.name_;
      pageNumbers_ = other.pageNumbers_.Clone();
      data_ = other.data_;
      language_ = other.language_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadPdfRequest Clone() {
      return new UploadPdfRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Client-assigned identifier for the PDF file being uploaded. Must match the
    /// regex '^[0-9A-Za-z.-]{1,48}$' and must not collide with other unexpired PDFs.
    /// If not supplied, a satisfactory name is automatically generated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_numbers" field.</summary>
    public const int PageNumbersFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_pageNumbers_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> pageNumbers_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// Only the page numbers listed here will be rendered and made available for 
    /// later registration as a form exemplar. If no pages are listed, all pages will 
    /// be rendered and be made available.  The first page is page 1, not page 0.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> PageNumbers {
      get { return pageNumbers_; }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 3;
    private pb::ByteString data_ = pb::ByteString.Empty;
    /// <summary>
    /// The actual PDF data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 4;
    private global::Nsys.Api.Ntypes.Language language_ = 0;
    /// <summary>
    /// The dominant language of the pdf.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nsys.Api.Ntypes.Language Language {
      get { return language_; }
      set {
        language_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadPdfRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadPdfRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!pageNumbers_.Equals(other.pageNumbers_)) return false;
      if (Data != other.Data) return false;
      if (Language != other.Language) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= pageNumbers_.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (Language != 0) hash ^= Language.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      pageNumbers_.WriteTo(output, _repeated_pageNumbers_codec);
      if (Data.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Data);
      }
      if (Language != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Language);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += pageNumbers_.CalculateSize(_repeated_pageNumbers_codec);
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (Language != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Language);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadPdfRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      pageNumbers_.Add(other.pageNumbers_);
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      if (other.Language != 0) {
        Language = other.Language;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            pageNumbers_.AddEntriesFrom(input, _repeated_pageNumbers_codec);
            break;
          }
          case 26: {
            Data = input.ReadBytes();
            break;
          }
          case 32: {
            Language = (global::Nsys.Api.Ntypes.Language) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UploadPdfResponse : pb::IMessage<UploadPdfResponse> {
    private static readonly pb::MessageParser<UploadPdfResponse> _parser = new pb::MessageParser<UploadPdfResponse>(() => new UploadPdfResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadPdfResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nsys.Api.Exemplar.ExemplarReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadPdfResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadPdfResponse(UploadPdfResponse other) : this() {
      name_ = other.name_;
      processedPages_ = other.processedPages_.Clone();
      expireTime_ = other.expireTime_ != null ? other.expireTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadPdfResponse Clone() {
      return new UploadPdfResponse(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The specified or generated name for the PDF.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "processed_pages" field.</summary>
    public const int ProcessedPagesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Nsys.Api.Ntypes.PdfPage> _repeated_processedPages_codec
        = pb::FieldCodec.ForMessage(18, global::Nsys.Api.Ntypes.PdfPage.Parser);
    private readonly pbc::RepeatedField<global::Nsys.Api.Ntypes.PdfPage> processedPages_ = new pbc::RepeatedField<global::Nsys.Api.Ntypes.PdfPage>();
    /// <summary>
    /// Info on all of the processed pages. Guaranteed to be in increasing page order.
    /// The returned pages do NOT include the image data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Nsys.Api.Ntypes.PdfPage> ProcessedPages {
      get { return processedPages_; }
    }

    /// <summary>Field number for the "expire_time" field.</summary>
    public const int ExpireTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expireTime_;
    /// <summary>
    /// The expiration time of the PDF. If pages from the PDF have not been registered 
    /// as an exemplar prior to this time, they are forgotten. However, once a page
    /// has been registered, it becomes a permanent part of the exemplar.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ExpireTime {
      get { return expireTime_; }
      set {
        expireTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadPdfResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadPdfResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!processedPages_.Equals(other.processedPages_)) return false;
      if (!object.Equals(ExpireTime, other.ExpireTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= processedPages_.GetHashCode();
      if (expireTime_ != null) hash ^= ExpireTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      processedPages_.WriteTo(output, _repeated_processedPages_codec);
      if (expireTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ExpireTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += processedPages_.CalculateSize(_repeated_processedPages_codec);
      if (expireTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpireTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadPdfResponse other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      processedPages_.Add(other.processedPages_);
      if (other.expireTime_ != null) {
        if (expireTime_ == null) {
          ExpireTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ExpireTime.MergeFrom(other.ExpireTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            processedPages_.AddEntriesFrom(input, _repeated_processedPages_codec);
            break;
          }
          case 26: {
            if (expireTime_ == null) {
              ExpireTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpireTime);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetPdfPageRequest : pb::IMessage<GetPdfPageRequest> {
    private static readonly pb::MessageParser<GetPdfPageRequest> _parser = new pb::MessageParser<GetPdfPageRequest>(() => new GetPdfPageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetPdfPageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nsys.Api.Exemplar.ExemplarReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPdfPageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPdfPageRequest(GetPdfPageRequest other) : this() {
      name_ = other.name_;
      pageNumber_ = other.pageNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPdfPageRequest Clone() {
      return new GetPdfPageRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the PDF to get.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_number" field.</summary>
    public const int PageNumberFieldNumber = 2;
    private int pageNumber_;
    /// <summary>
    /// The page number to get (first page is 1).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageNumber {
      get { return pageNumber_; }
      set {
        pageNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetPdfPageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetPdfPageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (PageNumber != other.PageNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (PageNumber != 0) hash ^= PageNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (PageNumber != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (PageNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetPdfPageRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.PageNumber != 0) {
        PageNumber = other.PageNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            PageNumber = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetPdfPageResponse : pb::IMessage<GetPdfPageResponse> {
    private static readonly pb::MessageParser<GetPdfPageResponse> _parser = new pb::MessageParser<GetPdfPageResponse>(() => new GetPdfPageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetPdfPageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nsys.Api.Exemplar.ExemplarReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPdfPageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPdfPageResponse(GetPdfPageResponse other) : this() {
      page_ = other.page_ != null ? other.page_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPdfPageResponse Clone() {
      return new GetPdfPageResponse(this);
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 1;
    private global::Nsys.Api.Ntypes.PdfPage page_;
    /// <summary>
    /// The returned page.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nsys.Api.Ntypes.PdfPage Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetPdfPageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetPdfPageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Page, other.Page)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (page_ != null) hash ^= Page.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (page_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Page);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (page_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Page);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetPdfPageResponse other) {
      if (other == null) {
        return;
      }
      if (other.page_ != null) {
        if (page_ == null) {
          Page = new global::Nsys.Api.Ntypes.PdfPage();
        }
        Page.MergeFrom(other.Page);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (page_ == null) {
              Page = new global::Nsys.Api.Ntypes.PdfPage();
            }
            input.ReadMessage(Page);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateExemplarRequest : pb::IMessage<CreateExemplarRequest> {
    private static readonly pb::MessageParser<CreateExemplarRequest> _parser = new pb::MessageParser<CreateExemplarRequest>(() => new CreateExemplarRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateExemplarRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nsys.Api.Exemplar.ExemplarReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateExemplarRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateExemplarRequest(CreateExemplarRequest other) : this() {
      name_ = other.name_;
      description_ = other.description_;
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      imageOrPdfName_ = other.imageOrPdfName_;
      pageNumber_ = other.pageNumber_;
      language_ = other.language_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateExemplarRequest Clone() {
      return new CreateExemplarRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the exemplar .. aka the form name or Id. Must be unique 
    /// within the account and must also match the regex '^[0-9A-Za-z.-]{1,48}$'.
    /// If not supplied, a satisfactory name is automatically generated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    /// For client use.  Optional.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Any metadata_;
    /// <summary>
    /// Any metadata of the client's choosing. Limit to a few KB. Optional.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "image_or_pdf_name" field.</summary>
    public const int ImageOrPdfNameFieldNumber = 4;
    private string imageOrPdfName_ = "";
    /// <summary>
    /// The name of an uploaded PDF or uploaded dimensioned image.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageOrPdfName {
      get { return imageOrPdfName_; }
      set {
        imageOrPdfName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_number" field.</summary>
    public const int PageNumberFieldNumber = 5;
    private int pageNumber_;
    /// <summary>
    /// If registering a page within a PDF, the 1-based page number within the PDF 
    /// to be used as the exemplar. The page must have been designated as being a 
    /// page of interest during the original PDF upload. Do not set if creating an
    /// exemplar from an image.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageNumber {
      get { return pageNumber_; }
      set {
        pageNumber_ = value;
      }
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 6;
    private global::Nsys.Api.Ntypes.Language language_ = 0;
    /// <summary>
    /// The dominant printed language.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nsys.Api.Ntypes.Language Language {
      get { return language_; }
      set {
        language_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateExemplarRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateExemplarRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (ImageOrPdfName != other.ImageOrPdfName) return false;
      if (PageNumber != other.PageNumber) return false;
      if (Language != other.Language) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (ImageOrPdfName.Length != 0) hash ^= ImageOrPdfName.GetHashCode();
      if (PageNumber != 0) hash ^= PageNumber.GetHashCode();
      if (Language != 0) hash ^= Language.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (metadata_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Metadata);
      }
      if (ImageOrPdfName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ImageOrPdfName);
      }
      if (PageNumber != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PageNumber);
      }
      if (Language != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Language);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (ImageOrPdfName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageOrPdfName);
      }
      if (PageNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageNumber);
      }
      if (Language != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Language);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateExemplarRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.ImageOrPdfName.Length != 0) {
        ImageOrPdfName = other.ImageOrPdfName;
      }
      if (other.PageNumber != 0) {
        PageNumber = other.PageNumber;
      }
      if (other.Language != 0) {
        Language = other.Language;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            if (metadata_ == null) {
              Metadata = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 34: {
            ImageOrPdfName = input.ReadString();
            break;
          }
          case 40: {
            PageNumber = input.ReadInt32();
            break;
          }
          case 48: {
            Language = (global::Nsys.Api.Ntypes.Language) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateExemplarResponse : pb::IMessage<CreateExemplarResponse> {
    private static readonly pb::MessageParser<CreateExemplarResponse> _parser = new pb::MessageParser<CreateExemplarResponse>(() => new CreateExemplarResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateExemplarResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nsys.Api.Exemplar.ExemplarReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateExemplarResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateExemplarResponse(CreateExemplarResponse other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateExemplarResponse Clone() {
      return new CreateExemplarResponse(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The specified or generated identifier for the exemplar.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateExemplarResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateExemplarResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateExemplarResponse other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UploadDimensionedImageRequest : pb::IMessage<UploadDimensionedImageRequest> {
    private static readonly pb::MessageParser<UploadDimensionedImageRequest> _parser = new pb::MessageParser<UploadDimensionedImageRequest>(() => new UploadDimensionedImageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadDimensionedImageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nsys.Api.Exemplar.ExemplarReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadDimensionedImageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadDimensionedImageRequest(UploadDimensionedImageRequest other) : this() {
      name_ = other.name_;
      image_ = other.image_ != null ? other.image_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadDimensionedImageRequest Clone() {
      return new UploadDimensionedImageRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Ideally, this image started as a page in a native PDF and was exported by Acrobat 
    /// or equiv as an exact image of what is printed. If instead it is based on a scan of 
    /// a printed form, make sure the fully deskewed and is as clean as possible.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 2;
    private global::Nsys.Api.Ntypes.DimensionedImage image_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nsys.Api.Ntypes.DimensionedImage Image {
      get { return image_; }
      set {
        image_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadDimensionedImageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadDimensionedImageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Image, other.Image)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (image_ != null) hash ^= Image.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (image_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Image);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (image_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Image);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadDimensionedImageRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.image_ != null) {
        if (image_ == null) {
          Image = new global::Nsys.Api.Ntypes.DimensionedImage();
        }
        Image.MergeFrom(other.Image);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (image_ == null) {
              Image = new global::Nsys.Api.Ntypes.DimensionedImage();
            }
            input.ReadMessage(Image);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UploadDimensionedImageResponse : pb::IMessage<UploadDimensionedImageResponse> {
    private static readonly pb::MessageParser<UploadDimensionedImageResponse> _parser = new pb::MessageParser<UploadDimensionedImageResponse>(() => new UploadDimensionedImageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadDimensionedImageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nsys.Api.Exemplar.ExemplarReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadDimensionedImageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadDimensionedImageResponse(UploadDimensionedImageResponse other) : this() {
      name_ = other.name_;
      expireTime_ = other.expireTime_ != null ? other.expireTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadDimensionedImageResponse Clone() {
      return new UploadDimensionedImageResponse(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The supplied or generated name the uploaded dimensioned image.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expire_time" field.</summary>
    public const int ExpireTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expireTime_;
    /// <summary>
    /// The expiration time of the image. If the image has not been registered
    /// as an exemplar prior to this time, it is forgotten. However, once an image
    /// has been registered, it becomes a permanent part of the exemplar.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ExpireTime {
      get { return expireTime_; }
      set {
        expireTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadDimensionedImageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadDimensionedImageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(ExpireTime, other.ExpireTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (expireTime_ != null) hash ^= ExpireTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (expireTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ExpireTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (expireTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpireTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadDimensionedImageResponse other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.expireTime_ != null) {
        if (expireTime_ == null) {
          ExpireTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ExpireTime.MergeFrom(other.ExpireTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (expireTime_ == null) {
              ExpireTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpireTime);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetExemplarRequest : pb::IMessage<GetExemplarRequest> {
    private static readonly pb::MessageParser<GetExemplarRequest> _parser = new pb::MessageParser<GetExemplarRequest>(() => new GetExemplarRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetExemplarRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nsys.Api.Exemplar.ExemplarReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetExemplarRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetExemplarRequest(GetExemplarRequest other) : this() {
      exemplarName_ = other.exemplarName_;
      includeImage_ = other.includeImage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetExemplarRequest Clone() {
      return new GetExemplarRequest(this);
    }

    /// <summary>Field number for the "exemplar_name" field.</summary>
    public const int ExemplarNameFieldNumber = 1;
    private string exemplarName_ = "";
    /// <summary>
    /// Return the specified exemplar.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExemplarName {
      get { return exemplarName_; }
      set {
        exemplarName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "include_image" field.</summary>
    public const int IncludeImageFieldNumber = 2;
    private bool includeImage_;
    /// <summary>
    /// Set true if the returned exemplar is to include the full image data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IncludeImage {
      get { return includeImage_; }
      set {
        includeImage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetExemplarRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetExemplarRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ExemplarName != other.ExemplarName) return false;
      if (IncludeImage != other.IncludeImage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ExemplarName.Length != 0) hash ^= ExemplarName.GetHashCode();
      if (IncludeImage != false) hash ^= IncludeImage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ExemplarName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ExemplarName);
      }
      if (IncludeImage != false) {
        output.WriteRawTag(16);
        output.WriteBool(IncludeImage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ExemplarName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExemplarName);
      }
      if (IncludeImage != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetExemplarRequest other) {
      if (other == null) {
        return;
      }
      if (other.ExemplarName.Length != 0) {
        ExemplarName = other.ExemplarName;
      }
      if (other.IncludeImage != false) {
        IncludeImage = other.IncludeImage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ExemplarName = input.ReadString();
            break;
          }
          case 16: {
            IncludeImage = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetExemplarResponse : pb::IMessage<GetExemplarResponse> {
    private static readonly pb::MessageParser<GetExemplarResponse> _parser = new pb::MessageParser<GetExemplarResponse>(() => new GetExemplarResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetExemplarResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nsys.Api.Exemplar.ExemplarReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetExemplarResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetExemplarResponse(GetExemplarResponse other) : this() {
      exemplar_ = other.exemplar_ != null ? other.exemplar_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetExemplarResponse Clone() {
      return new GetExemplarResponse(this);
    }

    /// <summary>Field number for the "exemplar" field.</summary>
    public const int ExemplarFieldNumber = 1;
    private global::Nsys.Api.Ntypes.Exemplar exemplar_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nsys.Api.Ntypes.Exemplar Exemplar {
      get { return exemplar_; }
      set {
        exemplar_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetExemplarResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetExemplarResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Exemplar, other.Exemplar)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (exemplar_ != null) hash ^= Exemplar.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (exemplar_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Exemplar);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (exemplar_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Exemplar);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetExemplarResponse other) {
      if (other == null) {
        return;
      }
      if (other.exemplar_ != null) {
        if (exemplar_ == null) {
          Exemplar = new global::Nsys.Api.Ntypes.Exemplar();
        }
        Exemplar.MergeFrom(other.Exemplar);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (exemplar_ == null) {
              Exemplar = new global::Nsys.Api.Ntypes.Exemplar();
            }
            input.ReadMessage(Exemplar);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Currently returns all exemplars defined on the account.
  /// </summary>
  public sealed partial class ListExemplarsRequest : pb::IMessage<ListExemplarsRequest> {
    private static readonly pb::MessageParser<ListExemplarsRequest> _parser = new pb::MessageParser<ListExemplarsRequest>(() => new ListExemplarsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListExemplarsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nsys.Api.Exemplar.ExemplarReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListExemplarsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListExemplarsRequest(ListExemplarsRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListExemplarsRequest Clone() {
      return new ListExemplarsRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListExemplarsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListExemplarsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListExemplarsRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ListExemplarsResponse : pb::IMessage<ListExemplarsResponse> {
    private static readonly pb::MessageParser<ListExemplarsResponse> _parser = new pb::MessageParser<ListExemplarsResponse>(() => new ListExemplarsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListExemplarsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nsys.Api.Exemplar.ExemplarReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListExemplarsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListExemplarsResponse(ListExemplarsResponse other) : this() {
      exemplars_ = other.exemplars_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListExemplarsResponse Clone() {
      return new ListExemplarsResponse(this);
    }

    /// <summary>Field number for the "exemplars" field.</summary>
    public const int ExemplarsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Nsys.Api.Ntypes.Exemplar> _repeated_exemplars_codec
        = pb::FieldCodec.ForMessage(10, global::Nsys.Api.Ntypes.Exemplar.Parser);
    private readonly pbc::RepeatedField<global::Nsys.Api.Ntypes.Exemplar> exemplars_ = new pbc::RepeatedField<global::Nsys.Api.Ntypes.Exemplar>();
    /// <summary>
    /// The returned exemplars do not include the image data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Nsys.Api.Ntypes.Exemplar> Exemplars {
      get { return exemplars_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListExemplarsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListExemplarsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!exemplars_.Equals(other.exemplars_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= exemplars_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      exemplars_.WriteTo(output, _repeated_exemplars_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += exemplars_.CalculateSize(_repeated_exemplars_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListExemplarsResponse other) {
      if (other == null) {
        return;
      }
      exemplars_.Add(other.exemplars_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            exemplars_.AddEntriesFrom(input, _repeated_exemplars_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteExemplarRequest : pb::IMessage<DeleteExemplarRequest> {
    private static readonly pb::MessageParser<DeleteExemplarRequest> _parser = new pb::MessageParser<DeleteExemplarRequest>(() => new DeleteExemplarRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteExemplarRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nsys.Api.Exemplar.ExemplarReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteExemplarRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteExemplarRequest(DeleteExemplarRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteExemplarRequest Clone() {
      return new DeleteExemplarRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the exemplar to delete. 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteExemplarRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteExemplarRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteExemplarRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateFieldRequest : pb::IMessage<CreateFieldRequest> {
    private static readonly pb::MessageParser<CreateFieldRequest> _parser = new pb::MessageParser<CreateFieldRequest>(() => new CreateFieldRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateFieldRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nsys.Api.Exemplar.ExemplarReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFieldRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFieldRequest(CreateFieldRequest other) : this() {
      exemplarName_ = other.exemplarName_;
      field_ = other.field_ != null ? other.field_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFieldRequest Clone() {
      return new CreateFieldRequest(this);
    }

    /// <summary>Field number for the "exemplar_name" field.</summary>
    public const int ExemplarNameFieldNumber = 1;
    private string exemplarName_ = "";
    /// <summary>
    /// The identifier for the exemplar that the field is being defined in.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExemplarName {
      get { return exemplarName_; }
      set {
        exemplarName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "field" field.</summary>
    public const int FieldFieldNumber = 2;
    private global::Nsys.Api.Ntypes.Field field_;
    /// <summary>
    /// The actual field definition. If the field definition contains no name,
    /// a satisfactory name is automatically generated and returned in the 
    /// response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nsys.Api.Ntypes.Field Field {
      get { return field_; }
      set {
        field_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateFieldRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateFieldRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ExemplarName != other.ExemplarName) return false;
      if (!object.Equals(Field, other.Field)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ExemplarName.Length != 0) hash ^= ExemplarName.GetHashCode();
      if (field_ != null) hash ^= Field.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ExemplarName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ExemplarName);
      }
      if (field_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Field);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ExemplarName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExemplarName);
      }
      if (field_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Field);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateFieldRequest other) {
      if (other == null) {
        return;
      }
      if (other.ExemplarName.Length != 0) {
        ExemplarName = other.ExemplarName;
      }
      if (other.field_ != null) {
        if (field_ == null) {
          Field = new global::Nsys.Api.Ntypes.Field();
        }
        Field.MergeFrom(other.Field);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ExemplarName = input.ReadString();
            break;
          }
          case 18: {
            if (field_ == null) {
              Field = new global::Nsys.Api.Ntypes.Field();
            }
            input.ReadMessage(Field);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateFieldResponse : pb::IMessage<CreateFieldResponse> {
    private static readonly pb::MessageParser<CreateFieldResponse> _parser = new pb::MessageParser<CreateFieldResponse>(() => new CreateFieldResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateFieldResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nsys.Api.Exemplar.ExemplarReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFieldResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFieldResponse(CreateFieldResponse other) : this() {
      exemplarName_ = other.exemplarName_;
      fieldName_ = other.fieldName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFieldResponse Clone() {
      return new CreateFieldResponse(this);
    }

    /// <summary>Field number for the "exemplar_name" field.</summary>
    public const int ExemplarNameFieldNumber = 1;
    private string exemplarName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExemplarName {
      get { return exemplarName_; }
      set {
        exemplarName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "field_name" field.</summary>
    public const int FieldNameFieldNumber = 2;
    private string fieldName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FieldName {
      get { return fieldName_; }
      set {
        fieldName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateFieldResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateFieldResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ExemplarName != other.ExemplarName) return false;
      if (FieldName != other.FieldName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ExemplarName.Length != 0) hash ^= ExemplarName.GetHashCode();
      if (FieldName.Length != 0) hash ^= FieldName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ExemplarName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ExemplarName);
      }
      if (FieldName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FieldName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ExemplarName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExemplarName);
      }
      if (FieldName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FieldName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateFieldResponse other) {
      if (other == null) {
        return;
      }
      if (other.ExemplarName.Length != 0) {
        ExemplarName = other.ExemplarName;
      }
      if (other.FieldName.Length != 0) {
        FieldName = other.FieldName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ExemplarName = input.ReadString();
            break;
          }
          case 18: {
            FieldName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteFieldRequest : pb::IMessage<DeleteFieldRequest> {
    private static readonly pb::MessageParser<DeleteFieldRequest> _parser = new pb::MessageParser<DeleteFieldRequest>(() => new DeleteFieldRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteFieldRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nsys.Api.Exemplar.ExemplarReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteFieldRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteFieldRequest(DeleteFieldRequest other) : this() {
      exemplarName_ = other.exemplarName_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteFieldRequest Clone() {
      return new DeleteFieldRequest(this);
    }

    /// <summary>Field number for the "exemplar_name" field.</summary>
    public const int ExemplarNameFieldNumber = 1;
    private string exemplarName_ = "";
    /// <summary>
    /// The identifier for the exemplar that the field is defined in.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExemplarName {
      get { return exemplarName_; }
      set {
        exemplarName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// The identifier for the field within the exemplar.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteFieldRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteFieldRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ExemplarName != other.ExemplarName) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ExemplarName.Length != 0) hash ^= ExemplarName.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ExemplarName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ExemplarName);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ExemplarName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExemplarName);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteFieldRequest other) {
      if (other == null) {
        return;
      }
      if (other.ExemplarName.Length != 0) {
        ExemplarName = other.ExemplarName;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ExemplarName = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListFieldsRequest : pb::IMessage<ListFieldsRequest> {
    private static readonly pb::MessageParser<ListFieldsRequest> _parser = new pb::MessageParser<ListFieldsRequest>(() => new ListFieldsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListFieldsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nsys.Api.Exemplar.ExemplarReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFieldsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFieldsRequest(ListFieldsRequest other) : this() {
      exemplarName_ = other.exemplarName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFieldsRequest Clone() {
      return new ListFieldsRequest(this);
    }

    /// <summary>Field number for the "exemplar_name" field.</summary>
    public const int ExemplarNameFieldNumber = 1;
    private string exemplarName_ = "";
    /// <summary>
    /// The identifier for the exemplar that the fields of interest are in.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExemplarName {
      get { return exemplarName_; }
      set {
        exemplarName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListFieldsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListFieldsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ExemplarName != other.ExemplarName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ExemplarName.Length != 0) hash ^= ExemplarName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ExemplarName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ExemplarName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ExemplarName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExemplarName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListFieldsRequest other) {
      if (other == null) {
        return;
      }
      if (other.ExemplarName.Length != 0) {
        ExemplarName = other.ExemplarName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ExemplarName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListFieldsResponse : pb::IMessage<ListFieldsResponse> {
    private static readonly pb::MessageParser<ListFieldsResponse> _parser = new pb::MessageParser<ListFieldsResponse>(() => new ListFieldsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListFieldsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nsys.Api.Exemplar.ExemplarReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFieldsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFieldsResponse(ListFieldsResponse other) : this() {
      fields_ = other.fields_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFieldsResponse Clone() {
      return new ListFieldsResponse(this);
    }

    /// <summary>Field number for the "fields" field.</summary>
    public const int FieldsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Nsys.Api.Ntypes.Field> _repeated_fields_codec
        = pb::FieldCodec.ForMessage(10, global::Nsys.Api.Ntypes.Field.Parser);
    private readonly pbc::RepeatedField<global::Nsys.Api.Ntypes.Field> fields_ = new pbc::RepeatedField<global::Nsys.Api.Ntypes.Field>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Nsys.Api.Ntypes.Field> Fields {
      get { return fields_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListFieldsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListFieldsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!fields_.Equals(other.fields_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= fields_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      fields_.WriteTo(output, _repeated_fields_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += fields_.CalculateSize(_repeated_fields_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListFieldsResponse other) {
      if (other == null) {
        return;
      }
      fields_.Add(other.fields_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            fields_.AddEntriesFrom(input, _repeated_fields_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
