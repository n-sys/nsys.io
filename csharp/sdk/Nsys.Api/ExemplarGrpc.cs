// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: nsys.io/api/exemplar/exemplar.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Nsys.Api.Exemplar {
  public static partial class Exemplars
  {
    static readonly string __ServiceName = "nsys.api.exemplar.Exemplars";

    static readonly grpc::Marshaller<global::Nsys.Api.Exemplar.UploadDimensionedImageRequest> __Marshaller_nsys_api_exemplar_UploadDimensionedImageRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nsys.Api.Exemplar.UploadDimensionedImageRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nsys.Api.Exemplar.UploadDimensionedImageResponse> __Marshaller_nsys_api_exemplar_UploadDimensionedImageResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nsys.Api.Exemplar.UploadDimensionedImageResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.LongRunning.Operation.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nsys.Api.Exemplar.UploadPdfRequest> __Marshaller_nsys_api_exemplar_UploadPdfRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nsys.Api.Exemplar.UploadPdfRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nsys.Api.Exemplar.UploadPdfResponse> __Marshaller_nsys_api_exemplar_UploadPdfResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nsys.Api.Exemplar.UploadPdfResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nsys.Api.Exemplar.GetPdfPageRequest> __Marshaller_nsys_api_exemplar_GetPdfPageRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nsys.Api.Exemplar.GetPdfPageRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nsys.Api.Exemplar.GetPdfPageResponse> __Marshaller_nsys_api_exemplar_GetPdfPageResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nsys.Api.Exemplar.GetPdfPageResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nsys.Api.Exemplar.CreateExemplarRequest> __Marshaller_nsys_api_exemplar_CreateExemplarRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nsys.Api.Exemplar.CreateExemplarRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nsys.Api.Exemplar.CreateExemplarResponse> __Marshaller_nsys_api_exemplar_CreateExemplarResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nsys.Api.Exemplar.CreateExemplarResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nsys.Api.Exemplar.ListExemplarsRequest> __Marshaller_nsys_api_exemplar_ListExemplarsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nsys.Api.Exemplar.ListExemplarsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nsys.Api.Exemplar.ListExemplarsResponse> __Marshaller_nsys_api_exemplar_ListExemplarsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nsys.Api.Exemplar.ListExemplarsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nsys.Api.Exemplar.GetExemplarRequest> __Marshaller_nsys_api_exemplar_GetExemplarRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nsys.Api.Exemplar.GetExemplarRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nsys.Api.Exemplar.GetExemplarResponse> __Marshaller_nsys_api_exemplar_GetExemplarResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nsys.Api.Exemplar.GetExemplarResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nsys.Api.Exemplar.DeleteExemplarRequest> __Marshaller_nsys_api_exemplar_DeleteExemplarRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nsys.Api.Exemplar.DeleteExemplarRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nsys.Api.Exemplar.CreateFieldRequest> __Marshaller_nsys_api_exemplar_CreateFieldRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nsys.Api.Exemplar.CreateFieldRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nsys.Api.Exemplar.CreateFieldResponse> __Marshaller_nsys_api_exemplar_CreateFieldResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nsys.Api.Exemplar.CreateFieldResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nsys.Api.Exemplar.DeleteFieldRequest> __Marshaller_nsys_api_exemplar_DeleteFieldRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nsys.Api.Exemplar.DeleteFieldRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nsys.Api.Exemplar.ListFieldsRequest> __Marshaller_nsys_api_exemplar_ListFieldsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nsys.Api.Exemplar.ListFieldsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nsys.Api.Exemplar.ListFieldsResponse> __Marshaller_nsys_api_exemplar_ListFieldsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nsys.Api.Exemplar.ListFieldsResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Nsys.Api.Exemplar.UploadDimensionedImageRequest, global::Nsys.Api.Exemplar.UploadDimensionedImageResponse> __Method_UploadDimensionedImage = new grpc::Method<global::Nsys.Api.Exemplar.UploadDimensionedImageRequest, global::Nsys.Api.Exemplar.UploadDimensionedImageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UploadDimensionedImage",
        __Marshaller_nsys_api_exemplar_UploadDimensionedImageRequest,
        __Marshaller_nsys_api_exemplar_UploadDimensionedImageResponse);

    static readonly grpc::Method<global::Nsys.Api.Exemplar.UploadDimensionedImageRequest, global::Google.LongRunning.Operation> __Method_UploadDimensionedImageLRO = new grpc::Method<global::Nsys.Api.Exemplar.UploadDimensionedImageRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UploadDimensionedImageLRO",
        __Marshaller_nsys_api_exemplar_UploadDimensionedImageRequest,
        __Marshaller_google_longrunning_Operation);

    static readonly grpc::Method<global::Nsys.Api.Exemplar.UploadPdfRequest, global::Nsys.Api.Exemplar.UploadPdfResponse> __Method_UploadPdf = new grpc::Method<global::Nsys.Api.Exemplar.UploadPdfRequest, global::Nsys.Api.Exemplar.UploadPdfResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UploadPdf",
        __Marshaller_nsys_api_exemplar_UploadPdfRequest,
        __Marshaller_nsys_api_exemplar_UploadPdfResponse);

    static readonly grpc::Method<global::Nsys.Api.Exemplar.UploadPdfRequest, global::Google.LongRunning.Operation> __Method_UploadPdfLRO = new grpc::Method<global::Nsys.Api.Exemplar.UploadPdfRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UploadPdfLRO",
        __Marshaller_nsys_api_exemplar_UploadPdfRequest,
        __Marshaller_google_longrunning_Operation);

    static readonly grpc::Method<global::Nsys.Api.Exemplar.GetPdfPageRequest, global::Nsys.Api.Exemplar.GetPdfPageResponse> __Method_GetPdfPage = new grpc::Method<global::Nsys.Api.Exemplar.GetPdfPageRequest, global::Nsys.Api.Exemplar.GetPdfPageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPdfPage",
        __Marshaller_nsys_api_exemplar_GetPdfPageRequest,
        __Marshaller_nsys_api_exemplar_GetPdfPageResponse);

    static readonly grpc::Method<global::Nsys.Api.Exemplar.GetPdfPageRequest, global::Google.LongRunning.Operation> __Method_GetPdfPageLRO = new grpc::Method<global::Nsys.Api.Exemplar.GetPdfPageRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPdfPageLRO",
        __Marshaller_nsys_api_exemplar_GetPdfPageRequest,
        __Marshaller_google_longrunning_Operation);

    static readonly grpc::Method<global::Nsys.Api.Exemplar.CreateExemplarRequest, global::Nsys.Api.Exemplar.CreateExemplarResponse> __Method_CreateExemplar = new grpc::Method<global::Nsys.Api.Exemplar.CreateExemplarRequest, global::Nsys.Api.Exemplar.CreateExemplarResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateExemplar",
        __Marshaller_nsys_api_exemplar_CreateExemplarRequest,
        __Marshaller_nsys_api_exemplar_CreateExemplarResponse);

    static readonly grpc::Method<global::Nsys.Api.Exemplar.CreateExemplarRequest, global::Google.LongRunning.Operation> __Method_CreateExemplarLRO = new grpc::Method<global::Nsys.Api.Exemplar.CreateExemplarRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateExemplarLRO",
        __Marshaller_nsys_api_exemplar_CreateExemplarRequest,
        __Marshaller_google_longrunning_Operation);

    static readonly grpc::Method<global::Nsys.Api.Exemplar.ListExemplarsRequest, global::Nsys.Api.Exemplar.ListExemplarsResponse> __Method_ListExemplars = new grpc::Method<global::Nsys.Api.Exemplar.ListExemplarsRequest, global::Nsys.Api.Exemplar.ListExemplarsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListExemplars",
        __Marshaller_nsys_api_exemplar_ListExemplarsRequest,
        __Marshaller_nsys_api_exemplar_ListExemplarsResponse);

    static readonly grpc::Method<global::Nsys.Api.Exemplar.ListExemplarsRequest, global::Google.LongRunning.Operation> __Method_ListExemplarsLRO = new grpc::Method<global::Nsys.Api.Exemplar.ListExemplarsRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListExemplarsLRO",
        __Marshaller_nsys_api_exemplar_ListExemplarsRequest,
        __Marshaller_google_longrunning_Operation);

    static readonly grpc::Method<global::Nsys.Api.Exemplar.GetExemplarRequest, global::Nsys.Api.Exemplar.GetExemplarResponse> __Method_GetExemplar = new grpc::Method<global::Nsys.Api.Exemplar.GetExemplarRequest, global::Nsys.Api.Exemplar.GetExemplarResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetExemplar",
        __Marshaller_nsys_api_exemplar_GetExemplarRequest,
        __Marshaller_nsys_api_exemplar_GetExemplarResponse);

    static readonly grpc::Method<global::Nsys.Api.Exemplar.GetExemplarRequest, global::Google.LongRunning.Operation> __Method_GetExemplarLRO = new grpc::Method<global::Nsys.Api.Exemplar.GetExemplarRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetExemplarLRO",
        __Marshaller_nsys_api_exemplar_GetExemplarRequest,
        __Marshaller_google_longrunning_Operation);

    static readonly grpc::Method<global::Nsys.Api.Exemplar.DeleteExemplarRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteExemplar = new grpc::Method<global::Nsys.Api.Exemplar.DeleteExemplarRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteExemplar",
        __Marshaller_nsys_api_exemplar_DeleteExemplarRequest,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::Nsys.Api.Exemplar.DeleteExemplarRequest, global::Google.LongRunning.Operation> __Method_DeleteExemplarLRO = new grpc::Method<global::Nsys.Api.Exemplar.DeleteExemplarRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteExemplarLRO",
        __Marshaller_nsys_api_exemplar_DeleteExemplarRequest,
        __Marshaller_google_longrunning_Operation);

    static readonly grpc::Method<global::Nsys.Api.Exemplar.CreateFieldRequest, global::Nsys.Api.Exemplar.CreateFieldResponse> __Method_CreateField = new grpc::Method<global::Nsys.Api.Exemplar.CreateFieldRequest, global::Nsys.Api.Exemplar.CreateFieldResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateField",
        __Marshaller_nsys_api_exemplar_CreateFieldRequest,
        __Marshaller_nsys_api_exemplar_CreateFieldResponse);

    static readonly grpc::Method<global::Nsys.Api.Exemplar.CreateFieldRequest, global::Google.LongRunning.Operation> __Method_CreateFieldLRO = new grpc::Method<global::Nsys.Api.Exemplar.CreateFieldRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateFieldLRO",
        __Marshaller_nsys_api_exemplar_CreateFieldRequest,
        __Marshaller_google_longrunning_Operation);

    static readonly grpc::Method<global::Nsys.Api.Exemplar.DeleteFieldRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteField = new grpc::Method<global::Nsys.Api.Exemplar.DeleteFieldRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteField",
        __Marshaller_nsys_api_exemplar_DeleteFieldRequest,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::Nsys.Api.Exemplar.DeleteFieldRequest, global::Google.LongRunning.Operation> __Method_DeleteFieldLRO = new grpc::Method<global::Nsys.Api.Exemplar.DeleteFieldRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteFieldLRO",
        __Marshaller_nsys_api_exemplar_DeleteFieldRequest,
        __Marshaller_google_longrunning_Operation);

    static readonly grpc::Method<global::Nsys.Api.Exemplar.ListFieldsRequest, global::Nsys.Api.Exemplar.ListFieldsResponse> __Method_ListFields = new grpc::Method<global::Nsys.Api.Exemplar.ListFieldsRequest, global::Nsys.Api.Exemplar.ListFieldsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListFields",
        __Marshaller_nsys_api_exemplar_ListFieldsRequest,
        __Marshaller_nsys_api_exemplar_ListFieldsResponse);

    static readonly grpc::Method<global::Nsys.Api.Exemplar.ListFieldsRequest, global::Google.LongRunning.Operation> __Method_ListFieldsLRO = new grpc::Method<global::Nsys.Api.Exemplar.ListFieldsRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListFieldsLRO",
        __Marshaller_nsys_api_exemplar_ListFieldsRequest,
        __Marshaller_google_longrunning_Operation);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Nsys.Api.Exemplar.ExemplarReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for Exemplars</summary>
    public partial class ExemplarsClient : grpc::ClientBase<ExemplarsClient>
    {
      /// <summary>Creates a new client for Exemplars</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public ExemplarsClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Exemplars that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public ExemplarsClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected ExemplarsClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected ExemplarsClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Upload a dimensioned image.  
      /// This image should be pristine, upright, and deskewed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Nsys.Api.Exemplar.UploadDimensionedImageResponse UploadDimensionedImage(global::Nsys.Api.Exemplar.UploadDimensionedImageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UploadDimensionedImage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Upload a dimensioned image.  
      /// This image should be pristine, upright, and deskewed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Nsys.Api.Exemplar.UploadDimensionedImageResponse UploadDimensionedImage(global::Nsys.Api.Exemplar.UploadDimensionedImageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UploadDimensionedImage, null, options, request);
      }
      /// <summary>
      /// Upload a dimensioned image.  
      /// This image should be pristine, upright, and deskewed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Nsys.Api.Exemplar.UploadDimensionedImageResponse> UploadDimensionedImageAsync(global::Nsys.Api.Exemplar.UploadDimensionedImageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UploadDimensionedImageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Upload a dimensioned image.  
      /// This image should be pristine, upright, and deskewed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Nsys.Api.Exemplar.UploadDimensionedImageResponse> UploadDimensionedImageAsync(global::Nsys.Api.Exemplar.UploadDimensionedImageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UploadDimensionedImage, null, options, request);
      }
      public virtual global::Google.LongRunning.Operation UploadDimensionedImageLRO(global::Nsys.Api.Exemplar.UploadDimensionedImageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UploadDimensionedImageLRO(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.LongRunning.Operation UploadDimensionedImageLRO(global::Nsys.Api.Exemplar.UploadDimensionedImageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UploadDimensionedImageLRO, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UploadDimensionedImageLROAsync(global::Nsys.Api.Exemplar.UploadDimensionedImageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UploadDimensionedImageLROAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UploadDimensionedImageLROAsync(global::Nsys.Api.Exemplar.UploadDimensionedImageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UploadDimensionedImageLRO, null, options, request);
      }
      /// <summary>
      /// Upload a PDF. The specified (or all) of its pages are rendered and oriented 
      /// before the operation is complete. 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Nsys.Api.Exemplar.UploadPdfResponse UploadPdf(global::Nsys.Api.Exemplar.UploadPdfRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UploadPdf(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Upload a PDF. The specified (or all) of its pages are rendered and oriented 
      /// before the operation is complete. 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Nsys.Api.Exemplar.UploadPdfResponse UploadPdf(global::Nsys.Api.Exemplar.UploadPdfRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UploadPdf, null, options, request);
      }
      /// <summary>
      /// Upload a PDF. The specified (or all) of its pages are rendered and oriented 
      /// before the operation is complete. 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Nsys.Api.Exemplar.UploadPdfResponse> UploadPdfAsync(global::Nsys.Api.Exemplar.UploadPdfRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UploadPdfAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Upload a PDF. The specified (or all) of its pages are rendered and oriented 
      /// before the operation is complete. 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Nsys.Api.Exemplar.UploadPdfResponse> UploadPdfAsync(global::Nsys.Api.Exemplar.UploadPdfRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UploadPdf, null, options, request);
      }
      public virtual global::Google.LongRunning.Operation UploadPdfLRO(global::Nsys.Api.Exemplar.UploadPdfRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UploadPdfLRO(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.LongRunning.Operation UploadPdfLRO(global::Nsys.Api.Exemplar.UploadPdfRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UploadPdfLRO, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UploadPdfLROAsync(global::Nsys.Api.Exemplar.UploadPdfRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UploadPdfLROAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UploadPdfLROAsync(global::Nsys.Api.Exemplar.UploadPdfRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UploadPdfLRO, null, options, request);
      }
      /// <summary>
      /// Fetch a previously uploaded PDF page.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Nsys.Api.Exemplar.GetPdfPageResponse GetPdfPage(global::Nsys.Api.Exemplar.GetPdfPageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPdfPage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Fetch a previously uploaded PDF page.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Nsys.Api.Exemplar.GetPdfPageResponse GetPdfPage(global::Nsys.Api.Exemplar.GetPdfPageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPdfPage, null, options, request);
      }
      /// <summary>
      /// Fetch a previously uploaded PDF page.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Nsys.Api.Exemplar.GetPdfPageResponse> GetPdfPageAsync(global::Nsys.Api.Exemplar.GetPdfPageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPdfPageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Fetch a previously uploaded PDF page.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Nsys.Api.Exemplar.GetPdfPageResponse> GetPdfPageAsync(global::Nsys.Api.Exemplar.GetPdfPageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPdfPage, null, options, request);
      }
      public virtual global::Google.LongRunning.Operation GetPdfPageLRO(global::Nsys.Api.Exemplar.GetPdfPageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPdfPageLRO(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.LongRunning.Operation GetPdfPageLRO(global::Nsys.Api.Exemplar.GetPdfPageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPdfPageLRO, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> GetPdfPageLROAsync(global::Nsys.Api.Exemplar.GetPdfPageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPdfPageLROAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> GetPdfPageLROAsync(global::Nsys.Api.Exemplar.GetPdfPageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPdfPageLRO, null, options, request);
      }
      /// <summary>
      /// Register a dimensioned image or PDF page as being an exemplar. Once
      /// registered, the image becomes independently associated with the exemplar 
      /// name and will not expire.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Nsys.Api.Exemplar.CreateExemplarResponse CreateExemplar(global::Nsys.Api.Exemplar.CreateExemplarRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateExemplar(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Register a dimensioned image or PDF page as being an exemplar. Once
      /// registered, the image becomes independently associated with the exemplar 
      /// name and will not expire.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Nsys.Api.Exemplar.CreateExemplarResponse CreateExemplar(global::Nsys.Api.Exemplar.CreateExemplarRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateExemplar, null, options, request);
      }
      /// <summary>
      /// Register a dimensioned image or PDF page as being an exemplar. Once
      /// registered, the image becomes independently associated with the exemplar 
      /// name and will not expire.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Nsys.Api.Exemplar.CreateExemplarResponse> CreateExemplarAsync(global::Nsys.Api.Exemplar.CreateExemplarRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateExemplarAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Register a dimensioned image or PDF page as being an exemplar. Once
      /// registered, the image becomes independently associated with the exemplar 
      /// name and will not expire.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Nsys.Api.Exemplar.CreateExemplarResponse> CreateExemplarAsync(global::Nsys.Api.Exemplar.CreateExemplarRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateExemplar, null, options, request);
      }
      public virtual global::Google.LongRunning.Operation CreateExemplarLRO(global::Nsys.Api.Exemplar.CreateExemplarRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateExemplarLRO(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.LongRunning.Operation CreateExemplarLRO(global::Nsys.Api.Exemplar.CreateExemplarRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateExemplarLRO, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateExemplarLROAsync(global::Nsys.Api.Exemplar.CreateExemplarRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateExemplarLROAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateExemplarLROAsync(global::Nsys.Api.Exemplar.CreateExemplarRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateExemplarLRO, null, options, request);
      }
      /// <summary>
      /// Returns information on existing exemplars.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Nsys.Api.Exemplar.ListExemplarsResponse ListExemplars(global::Nsys.Api.Exemplar.ListExemplarsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListExemplars(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns information on existing exemplars.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Nsys.Api.Exemplar.ListExemplarsResponse ListExemplars(global::Nsys.Api.Exemplar.ListExemplarsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListExemplars, null, options, request);
      }
      /// <summary>
      /// Returns information on existing exemplars.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Nsys.Api.Exemplar.ListExemplarsResponse> ListExemplarsAsync(global::Nsys.Api.Exemplar.ListExemplarsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListExemplarsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns information on existing exemplars.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Nsys.Api.Exemplar.ListExemplarsResponse> ListExemplarsAsync(global::Nsys.Api.Exemplar.ListExemplarsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListExemplars, null, options, request);
      }
      public virtual global::Google.LongRunning.Operation ListExemplarsLRO(global::Nsys.Api.Exemplar.ListExemplarsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListExemplarsLRO(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.LongRunning.Operation ListExemplarsLRO(global::Nsys.Api.Exemplar.ListExemplarsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListExemplarsLRO, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ListExemplarsLROAsync(global::Nsys.Api.Exemplar.ListExemplarsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListExemplarsLROAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ListExemplarsLROAsync(global::Nsys.Api.Exemplar.ListExemplarsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListExemplarsLRO, null, options, request);
      }
      /// <summary>
      /// Fetch an exemplar.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Nsys.Api.Exemplar.GetExemplarResponse GetExemplar(global::Nsys.Api.Exemplar.GetExemplarRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetExemplar(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Fetch an exemplar.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Nsys.Api.Exemplar.GetExemplarResponse GetExemplar(global::Nsys.Api.Exemplar.GetExemplarRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetExemplar, null, options, request);
      }
      /// <summary>
      /// Fetch an exemplar.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Nsys.Api.Exemplar.GetExemplarResponse> GetExemplarAsync(global::Nsys.Api.Exemplar.GetExemplarRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetExemplarAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Fetch an exemplar.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Nsys.Api.Exemplar.GetExemplarResponse> GetExemplarAsync(global::Nsys.Api.Exemplar.GetExemplarRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetExemplar, null, options, request);
      }
      public virtual global::Google.LongRunning.Operation GetExemplarLRO(global::Nsys.Api.Exemplar.GetExemplarRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetExemplarLRO(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.LongRunning.Operation GetExemplarLRO(global::Nsys.Api.Exemplar.GetExemplarRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetExemplarLRO, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> GetExemplarLROAsync(global::Nsys.Api.Exemplar.GetExemplarRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetExemplarLROAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> GetExemplarLROAsync(global::Nsys.Api.Exemplar.GetExemplarRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetExemplarLRO, null, options, request);
      }
      /// <summary>
      /// Permanently delete an exemplar and all dependent objects (i.e., fields).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteExemplar(global::Nsys.Api.Exemplar.DeleteExemplarRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteExemplar(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Permanently delete an exemplar and all dependent objects (i.e., fields).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteExemplar(global::Nsys.Api.Exemplar.DeleteExemplarRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteExemplar, null, options, request);
      }
      /// <summary>
      /// Permanently delete an exemplar and all dependent objects (i.e., fields).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteExemplarAsync(global::Nsys.Api.Exemplar.DeleteExemplarRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteExemplarAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Permanently delete an exemplar and all dependent objects (i.e., fields).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteExemplarAsync(global::Nsys.Api.Exemplar.DeleteExemplarRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteExemplar, null, options, request);
      }
      public virtual global::Google.LongRunning.Operation DeleteExemplarLRO(global::Nsys.Api.Exemplar.DeleteExemplarRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteExemplarLRO(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.LongRunning.Operation DeleteExemplarLRO(global::Nsys.Api.Exemplar.DeleteExemplarRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteExemplarLRO, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteExemplarLROAsync(global::Nsys.Api.Exemplar.DeleteExemplarRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteExemplarLROAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteExemplarLROAsync(global::Nsys.Api.Exemplar.DeleteExemplarRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteExemplarLRO, null, options, request);
      }
      /// <summary>
      /// Define a data collection field on an exemplar.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Nsys.Api.Exemplar.CreateFieldResponse CreateField(global::Nsys.Api.Exemplar.CreateFieldRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateField(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Define a data collection field on an exemplar.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Nsys.Api.Exemplar.CreateFieldResponse CreateField(global::Nsys.Api.Exemplar.CreateFieldRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateField, null, options, request);
      }
      /// <summary>
      /// Define a data collection field on an exemplar.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Nsys.Api.Exemplar.CreateFieldResponse> CreateFieldAsync(global::Nsys.Api.Exemplar.CreateFieldRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateFieldAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Define a data collection field on an exemplar.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Nsys.Api.Exemplar.CreateFieldResponse> CreateFieldAsync(global::Nsys.Api.Exemplar.CreateFieldRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateField, null, options, request);
      }
      public virtual global::Google.LongRunning.Operation CreateFieldLRO(global::Nsys.Api.Exemplar.CreateFieldRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateFieldLRO(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.LongRunning.Operation CreateFieldLRO(global::Nsys.Api.Exemplar.CreateFieldRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateFieldLRO, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateFieldLROAsync(global::Nsys.Api.Exemplar.CreateFieldRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateFieldLROAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateFieldLROAsync(global::Nsys.Api.Exemplar.CreateFieldRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateFieldLRO, null, options, request);
      }
      /// <summary>
      /// Remove a field from an exemplar.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteField(global::Nsys.Api.Exemplar.DeleteFieldRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteField(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove a field from an exemplar.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteField(global::Nsys.Api.Exemplar.DeleteFieldRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteField, null, options, request);
      }
      /// <summary>
      /// Remove a field from an exemplar.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteFieldAsync(global::Nsys.Api.Exemplar.DeleteFieldRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteFieldAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove a field from an exemplar.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteFieldAsync(global::Nsys.Api.Exemplar.DeleteFieldRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteField, null, options, request);
      }
      public virtual global::Google.LongRunning.Operation DeleteFieldLRO(global::Nsys.Api.Exemplar.DeleteFieldRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteFieldLRO(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.LongRunning.Operation DeleteFieldLRO(global::Nsys.Api.Exemplar.DeleteFieldRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteFieldLRO, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteFieldLROAsync(global::Nsys.Api.Exemplar.DeleteFieldRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteFieldLROAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteFieldLROAsync(global::Nsys.Api.Exemplar.DeleteFieldRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteFieldLRO, null, options, request);
      }
      /// <summary>
      /// Returns the fields defined on the specified exemplar.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Nsys.Api.Exemplar.ListFieldsResponse ListFields(global::Nsys.Api.Exemplar.ListFieldsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFields(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the fields defined on the specified exemplar.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Nsys.Api.Exemplar.ListFieldsResponse ListFields(global::Nsys.Api.Exemplar.ListFieldsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListFields, null, options, request);
      }
      /// <summary>
      /// Returns the fields defined on the specified exemplar.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Nsys.Api.Exemplar.ListFieldsResponse> ListFieldsAsync(global::Nsys.Api.Exemplar.ListFieldsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFieldsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the fields defined on the specified exemplar.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Nsys.Api.Exemplar.ListFieldsResponse> ListFieldsAsync(global::Nsys.Api.Exemplar.ListFieldsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListFields, null, options, request);
      }
      public virtual global::Google.LongRunning.Operation ListFieldsLRO(global::Nsys.Api.Exemplar.ListFieldsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFieldsLRO(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.LongRunning.Operation ListFieldsLRO(global::Nsys.Api.Exemplar.ListFieldsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListFieldsLRO, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ListFieldsLROAsync(global::Nsys.Api.Exemplar.ListFieldsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFieldsLROAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ListFieldsLROAsync(global::Nsys.Api.Exemplar.ListFieldsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListFieldsLRO, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override ExemplarsClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ExemplarsClient(configuration);
      }
    }

  }
}
#endregion
