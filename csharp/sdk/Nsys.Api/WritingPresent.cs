// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: nsys.io/api/ntypes/writing_present.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nsys.Api.Ntypes {

  /// <summary>Holder for reflection information generated from nsys.io/api/ntypes/writing_present.proto</summary>
  public static partial class WritingPresentReflection {

    #region Descriptor
    /// <summary>File descriptor for nsys.io/api/ntypes/writing_present.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WritingPresentReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cihuc3lzLmlvL2FwaS9udHlwZXMvd3JpdGluZ19wcmVzZW50LnByb3RvEg9u",
            "c3lzLmFwaS5udHlwZXMaIW5zeXMuaW8vYXBpL250eXBlcy9nZW9tZXRyeS5w",
            "cm90bxolbnN5cy5pby9hcGkvbnR5cGVzL2ltYWdlX250eXBlcy5wcm90byJP",
            "ChhIYW5kd3JpdGluZ1ByZXNlbnRQdXp6bGUSMwoNYm91bmRpbmdfYXJlYRgB",
            "IAEoCzIcLm5zeXMuYXBpLm50eXBlcy5Cb3VuZGVkQXJlYSJLChVIYW5kd3Jp",
            "dGluZ1ByZXNlbnRDdXQSMgoHcmF3X2N1dBgBIAEoCzIhLm5zeXMuYXBpLm50",
            "eXBlcy5EaW1lbnNpb25lZEltYWdlIhgKFkhhbmR3cml0aW5nUHJlc2VudEhp",
            "bnQiLQoaSGFuZHdyaXRpbmdQcmVzZW50U29sdXRpb24SDwoHcHJlc2VudBgB",
            "IAEoCEIUWhJuc3lzLmlvL2FwaS9udHlwZXNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Nsys.Api.Ntypes.GeometryReflection.Descriptor, global::Nsys.Api.Ntypes.ImageNtypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nsys.Api.Ntypes.HandwritingPresentPuzzle), global::Nsys.Api.Ntypes.HandwritingPresentPuzzle.Parser, new[]{ "BoundingArea" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nsys.Api.Ntypes.HandwritingPresentCut), global::Nsys.Api.Ntypes.HandwritingPresentCut.Parser, new[]{ "RawCut" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nsys.Api.Ntypes.HandwritingPresentHint), global::Nsys.Api.Ntypes.HandwritingPresentHint.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nsys.Api.Ntypes.HandwritingPresentSolution), global::Nsys.Api.Ntypes.HandwritingPresentSolution.Parser, new[]{ "Present" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class HandwritingPresentPuzzle : pb::IMessage<HandwritingPresentPuzzle> {
    private static readonly pb::MessageParser<HandwritingPresentPuzzle> _parser = new pb::MessageParser<HandwritingPresentPuzzle>(() => new HandwritingPresentPuzzle());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HandwritingPresentPuzzle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nsys.Api.Ntypes.WritingPresentReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandwritingPresentPuzzle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandwritingPresentPuzzle(HandwritingPresentPuzzle other) : this() {
      boundingArea_ = other.boundingArea_ != null ? other.boundingArea_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandwritingPresentPuzzle Clone() {
      return new HandwritingPresentPuzzle(this);
    }

    /// <summary>Field number for the "bounding_area" field.</summary>
    public const int BoundingAreaFieldNumber = 1;
    private global::Nsys.Api.Ntypes.BoundedArea boundingArea_;
    /// <summary>
    /// This should be a tightly cut area which encompasses the bulk of 
    /// where writing for the field should appear but does not capture 
    /// anything outside of that area.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nsys.Api.Ntypes.BoundedArea BoundingArea {
      get { return boundingArea_; }
      set {
        boundingArea_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HandwritingPresentPuzzle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HandwritingPresentPuzzle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BoundingArea, other.BoundingArea)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (boundingArea_ != null) hash ^= BoundingArea.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (boundingArea_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BoundingArea);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (boundingArea_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BoundingArea);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HandwritingPresentPuzzle other) {
      if (other == null) {
        return;
      }
      if (other.boundingArea_ != null) {
        if (boundingArea_ == null) {
          BoundingArea = new global::Nsys.Api.Ntypes.BoundedArea();
        }
        BoundingArea.MergeFrom(other.BoundingArea);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (boundingArea_ == null) {
              BoundingArea = new global::Nsys.Api.Ntypes.BoundedArea();
            }
            input.ReadMessage(BoundingArea);
            break;
          }
        }
      }
    }

  }

  public sealed partial class HandwritingPresentCut : pb::IMessage<HandwritingPresentCut> {
    private static readonly pb::MessageParser<HandwritingPresentCut> _parser = new pb::MessageParser<HandwritingPresentCut>(() => new HandwritingPresentCut());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HandwritingPresentCut> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nsys.Api.Ntypes.WritingPresentReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandwritingPresentCut() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandwritingPresentCut(HandwritingPresentCut other) : this() {
      rawCut_ = other.rawCut_ != null ? other.rawCut_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandwritingPresentCut Clone() {
      return new HandwritingPresentCut(this);
    }

    /// <summary>Field number for the "raw_cut" field.</summary>
    public const int RawCutFieldNumber = 1;
    private global::Nsys.Api.Ntypes.DimensionedImage rawCut_;
    /// <summary>
    /// The raw cut image
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nsys.Api.Ntypes.DimensionedImage RawCut {
      get { return rawCut_; }
      set {
        rawCut_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HandwritingPresentCut);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HandwritingPresentCut other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RawCut, other.RawCut)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (rawCut_ != null) hash ^= RawCut.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (rawCut_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RawCut);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (rawCut_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RawCut);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HandwritingPresentCut other) {
      if (other == null) {
        return;
      }
      if (other.rawCut_ != null) {
        if (rawCut_ == null) {
          RawCut = new global::Nsys.Api.Ntypes.DimensionedImage();
        }
        RawCut.MergeFrom(other.RawCut);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (rawCut_ == null) {
              RawCut = new global::Nsys.Api.Ntypes.DimensionedImage();
            }
            input.ReadMessage(RawCut);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// TBD
  /// </summary>
  public sealed partial class HandwritingPresentHint : pb::IMessage<HandwritingPresentHint> {
    private static readonly pb::MessageParser<HandwritingPresentHint> _parser = new pb::MessageParser<HandwritingPresentHint>(() => new HandwritingPresentHint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HandwritingPresentHint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nsys.Api.Ntypes.WritingPresentReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandwritingPresentHint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandwritingPresentHint(HandwritingPresentHint other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandwritingPresentHint Clone() {
      return new HandwritingPresentHint(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HandwritingPresentHint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HandwritingPresentHint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HandwritingPresentHint other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class HandwritingPresentSolution : pb::IMessage<HandwritingPresentSolution> {
    private static readonly pb::MessageParser<HandwritingPresentSolution> _parser = new pb::MessageParser<HandwritingPresentSolution>(() => new HandwritingPresentSolution());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HandwritingPresentSolution> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nsys.Api.Ntypes.WritingPresentReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandwritingPresentSolution() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandwritingPresentSolution(HandwritingPresentSolution other) : this() {
      present_ = other.present_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandwritingPresentSolution Clone() {
      return new HandwritingPresentSolution(this);
    }

    /// <summary>Field number for the "present" field.</summary>
    public const int PresentFieldNumber = 1;
    private bool present_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Present {
      get { return present_; }
      set {
        present_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HandwritingPresentSolution);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HandwritingPresentSolution other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Present != other.Present) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Present != false) hash ^= Present.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Present != false) {
        output.WriteRawTag(8);
        output.WriteBool(Present);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Present != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HandwritingPresentSolution other) {
      if (other == null) {
        return;
      }
      if (other.Present != false) {
        Present = other.Present;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Present = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
