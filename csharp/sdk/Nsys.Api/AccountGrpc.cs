// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: nsys.io/api/tacct/account.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Nsys.Api.Tacct {
  public static partial class Accounts
  {
    static readonly string __ServiceName = "nsys.api.tacct.Accounts";

    static readonly grpc::Marshaller<global::Nsys.Api.Tacct.GetAccountRequest> __Marshaller_nsys_api_tacct_GetAccountRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nsys.Api.Tacct.GetAccountRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nsys.Api.Tacct.GetAccountResponse> __Marshaller_nsys_api_tacct_GetAccountResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nsys.Api.Tacct.GetAccountResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.LongRunning.Operation.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nsys.Api.Tacct.ListAccountsRequest> __Marshaller_nsys_api_tacct_ListAccountsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nsys.Api.Tacct.ListAccountsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nsys.Api.Tacct.ListAccountsResponse> __Marshaller_nsys_api_tacct_ListAccountsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nsys.Api.Tacct.ListAccountsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nsys.Api.Tacct.CreateAccountRequest> __Marshaller_nsys_api_tacct_CreateAccountRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nsys.Api.Tacct.CreateAccountRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nsys.Api.Tacct.CreateAccountResponse> __Marshaller_nsys_api_tacct_CreateAccountResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nsys.Api.Tacct.CreateAccountResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nsys.Api.Tacct.DeleteAccountRequest> __Marshaller_nsys_api_tacct_DeleteAccountRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nsys.Api.Tacct.DeleteAccountRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);

    static readonly grpc::Method<global::Nsys.Api.Tacct.GetAccountRequest, global::Nsys.Api.Tacct.GetAccountResponse> __Method_GetAccount = new grpc::Method<global::Nsys.Api.Tacct.GetAccountRequest, global::Nsys.Api.Tacct.GetAccountResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAccount",
        __Marshaller_nsys_api_tacct_GetAccountRequest,
        __Marshaller_nsys_api_tacct_GetAccountResponse);

    static readonly grpc::Method<global::Nsys.Api.Tacct.GetAccountRequest, global::Google.LongRunning.Operation> __Method_GetAccountLRO = new grpc::Method<global::Nsys.Api.Tacct.GetAccountRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAccountLRO",
        __Marshaller_nsys_api_tacct_GetAccountRequest,
        __Marshaller_google_longrunning_Operation);

    static readonly grpc::Method<global::Nsys.Api.Tacct.ListAccountsRequest, global::Nsys.Api.Tacct.ListAccountsResponse> __Method_ListAccounts = new grpc::Method<global::Nsys.Api.Tacct.ListAccountsRequest, global::Nsys.Api.Tacct.ListAccountsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAccounts",
        __Marshaller_nsys_api_tacct_ListAccountsRequest,
        __Marshaller_nsys_api_tacct_ListAccountsResponse);

    static readonly grpc::Method<global::Nsys.Api.Tacct.ListAccountsRequest, global::Google.LongRunning.Operation> __Method_ListAccountsLRO = new grpc::Method<global::Nsys.Api.Tacct.ListAccountsRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAccountsLRO",
        __Marshaller_nsys_api_tacct_ListAccountsRequest,
        __Marshaller_google_longrunning_Operation);

    static readonly grpc::Method<global::Nsys.Api.Tacct.CreateAccountRequest, global::Nsys.Api.Tacct.CreateAccountResponse> __Method_CreateAccount = new grpc::Method<global::Nsys.Api.Tacct.CreateAccountRequest, global::Nsys.Api.Tacct.CreateAccountResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateAccount",
        __Marshaller_nsys_api_tacct_CreateAccountRequest,
        __Marshaller_nsys_api_tacct_CreateAccountResponse);

    static readonly grpc::Method<global::Nsys.Api.Tacct.CreateAccountRequest, global::Google.LongRunning.Operation> __Method_CreateAccountLRO = new grpc::Method<global::Nsys.Api.Tacct.CreateAccountRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateAccountLRO",
        __Marshaller_nsys_api_tacct_CreateAccountRequest,
        __Marshaller_google_longrunning_Operation);

    static readonly grpc::Method<global::Nsys.Api.Tacct.DeleteAccountRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteAccount = new grpc::Method<global::Nsys.Api.Tacct.DeleteAccountRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteAccount",
        __Marshaller_nsys_api_tacct_DeleteAccountRequest,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::Nsys.Api.Tacct.DeleteAccountRequest, global::Google.LongRunning.Operation> __Method_DeleteAccountLRO = new grpc::Method<global::Nsys.Api.Tacct.DeleteAccountRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteAccountLRO",
        __Marshaller_nsys_api_tacct_DeleteAccountRequest,
        __Marshaller_google_longrunning_Operation);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Nsys.Api.Tacct.AccountReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for Accounts</summary>
    public partial class AccountsClient : grpc::ClientBase<AccountsClient>
    {
      /// <summary>Creates a new client for Accounts</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public AccountsClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Accounts that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public AccountsClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected AccountsClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected AccountsClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// GetAccount returns information on the requesting account or for a subaccount.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Nsys.Api.Tacct.GetAccountResponse GetAccount(global::Nsys.Api.Tacct.GetAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccount(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// GetAccount returns information on the requesting account or for a subaccount.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Nsys.Api.Tacct.GetAccountResponse GetAccount(global::Nsys.Api.Tacct.GetAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAccount, null, options, request);
      }
      /// <summary>
      /// GetAccount returns information on the requesting account or for a subaccount.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Nsys.Api.Tacct.GetAccountResponse> GetAccountAsync(global::Nsys.Api.Tacct.GetAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// GetAccount returns information on the requesting account or for a subaccount.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Nsys.Api.Tacct.GetAccountResponse> GetAccountAsync(global::Nsys.Api.Tacct.GetAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAccount, null, options, request);
      }
      public virtual global::Google.LongRunning.Operation GetAccountLRO(global::Nsys.Api.Tacct.GetAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccountLRO(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.LongRunning.Operation GetAccountLRO(global::Nsys.Api.Tacct.GetAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAccountLRO, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> GetAccountLROAsync(global::Nsys.Api.Tacct.GetAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccountLROAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> GetAccountLROAsync(global::Nsys.Api.Tacct.GetAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAccountLRO, null, options, request);
      }
      /// <summary>
      /// ListAccounts returns information on a specified list of subaccounts or all
      /// subaccounts. May only be issued by a master account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Nsys.Api.Tacct.ListAccountsResponse ListAccounts(global::Nsys.Api.Tacct.ListAccountsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAccounts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ListAccounts returns information on a specified list of subaccounts or all
      /// subaccounts. May only be issued by a master account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Nsys.Api.Tacct.ListAccountsResponse ListAccounts(global::Nsys.Api.Tacct.ListAccountsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAccounts, null, options, request);
      }
      /// <summary>
      /// ListAccounts returns information on a specified list of subaccounts or all
      /// subaccounts. May only be issued by a master account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Nsys.Api.Tacct.ListAccountsResponse> ListAccountsAsync(global::Nsys.Api.Tacct.ListAccountsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAccountsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ListAccounts returns information on a specified list of subaccounts or all
      /// subaccounts. May only be issued by a master account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Nsys.Api.Tacct.ListAccountsResponse> ListAccountsAsync(global::Nsys.Api.Tacct.ListAccountsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAccounts, null, options, request);
      }
      public virtual global::Google.LongRunning.Operation ListAccountsLRO(global::Nsys.Api.Tacct.ListAccountsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAccountsLRO(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.LongRunning.Operation ListAccountsLRO(global::Nsys.Api.Tacct.ListAccountsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAccountsLRO, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ListAccountsLROAsync(global::Nsys.Api.Tacct.ListAccountsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAccountsLROAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ListAccountsLROAsync(global::Nsys.Api.Tacct.ListAccountsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAccountsLRO, null, options, request);
      }
      /// <summary>
      /// CreateAccount may be issued by master accounts to create subaccounts.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Nsys.Api.Tacct.CreateAccountResponse CreateAccount(global::Nsys.Api.Tacct.CreateAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAccount(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// CreateAccount may be issued by master accounts to create subaccounts.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Nsys.Api.Tacct.CreateAccountResponse CreateAccount(global::Nsys.Api.Tacct.CreateAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateAccount, null, options, request);
      }
      /// <summary>
      /// CreateAccount may be issued by master accounts to create subaccounts.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Nsys.Api.Tacct.CreateAccountResponse> CreateAccountAsync(global::Nsys.Api.Tacct.CreateAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAccountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// CreateAccount may be issued by master accounts to create subaccounts.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Nsys.Api.Tacct.CreateAccountResponse> CreateAccountAsync(global::Nsys.Api.Tacct.CreateAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateAccount, null, options, request);
      }
      public virtual global::Google.LongRunning.Operation CreateAccountLRO(global::Nsys.Api.Tacct.CreateAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAccountLRO(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.LongRunning.Operation CreateAccountLRO(global::Nsys.Api.Tacct.CreateAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateAccountLRO, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateAccountLROAsync(global::Nsys.Api.Tacct.CreateAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAccountLROAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateAccountLROAsync(global::Nsys.Api.Tacct.CreateAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateAccountLRO, null, options, request);
      }
      /// <summary>
      /// DeleteAccount may be issued by master accounts to delete subaccounts.
      /// All tickets associated with the specified account are also invalidated.
      /// Note: Our frontend servers cache account information. It may take several 
      /// minutes for "deleted" accounts to actually become unusable.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteAccount(global::Nsys.Api.Tacct.DeleteAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAccount(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DeleteAccount may be issued by master accounts to delete subaccounts.
      /// All tickets associated with the specified account are also invalidated.
      /// Note: Our frontend servers cache account information. It may take several 
      /// minutes for "deleted" accounts to actually become unusable.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteAccount(global::Nsys.Api.Tacct.DeleteAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteAccount, null, options, request);
      }
      /// <summary>
      /// DeleteAccount may be issued by master accounts to delete subaccounts.
      /// All tickets associated with the specified account are also invalidated.
      /// Note: Our frontend servers cache account information. It may take several 
      /// minutes for "deleted" accounts to actually become unusable.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAccountAsync(global::Nsys.Api.Tacct.DeleteAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAccountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DeleteAccount may be issued by master accounts to delete subaccounts.
      /// All tickets associated with the specified account are also invalidated.
      /// Note: Our frontend servers cache account information. It may take several 
      /// minutes for "deleted" accounts to actually become unusable.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAccountAsync(global::Nsys.Api.Tacct.DeleteAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteAccount, null, options, request);
      }
      public virtual global::Google.LongRunning.Operation DeleteAccountLRO(global::Nsys.Api.Tacct.DeleteAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAccountLRO(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.LongRunning.Operation DeleteAccountLRO(global::Nsys.Api.Tacct.DeleteAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteAccountLRO, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteAccountLROAsync(global::Nsys.Api.Tacct.DeleteAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAccountLROAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteAccountLROAsync(global::Nsys.Api.Tacct.DeleteAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteAccountLRO, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override AccountsClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new AccountsClient(configuration);
      }
    }

  }
}
#endregion
