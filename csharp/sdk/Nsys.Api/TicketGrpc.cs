// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: nsys.io/api/tacct/ticket.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Nsys.Api.Tacct {
  /// <summary>
  /// Manage tickets aka API Keys. 
  /// </summary>
  public static partial class Tickets
  {
    static readonly string __ServiceName = "nsys.api.tacct.Tickets";

    static readonly grpc::Marshaller<global::Nsys.Api.Tacct.ListTicketsRequest> __Marshaller_nsys_api_tacct_ListTicketsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nsys.Api.Tacct.ListTicketsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nsys.Api.Tacct.ListTicketsResponse> __Marshaller_nsys_api_tacct_ListTicketsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nsys.Api.Tacct.ListTicketsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.LongRunning.Operation.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nsys.Api.Tacct.CreateTicketRequest> __Marshaller_nsys_api_tacct_CreateTicketRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nsys.Api.Tacct.CreateTicketRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nsys.Api.Tacct.CreateTicketResponse> __Marshaller_nsys_api_tacct_CreateTicketResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nsys.Api.Tacct.CreateTicketResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Nsys.Api.Tacct.DeleteTicketRequest> __Marshaller_nsys_api_tacct_DeleteTicketRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Nsys.Api.Tacct.DeleteTicketRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);

    static readonly grpc::Method<global::Nsys.Api.Tacct.ListTicketsRequest, global::Nsys.Api.Tacct.ListTicketsResponse> __Method_ListTickets = new grpc::Method<global::Nsys.Api.Tacct.ListTicketsRequest, global::Nsys.Api.Tacct.ListTicketsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListTickets",
        __Marshaller_nsys_api_tacct_ListTicketsRequest,
        __Marshaller_nsys_api_tacct_ListTicketsResponse);

    static readonly grpc::Method<global::Nsys.Api.Tacct.ListTicketsRequest, global::Google.LongRunning.Operation> __Method_ListTicketsLRO = new grpc::Method<global::Nsys.Api.Tacct.ListTicketsRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListTicketsLRO",
        __Marshaller_nsys_api_tacct_ListTicketsRequest,
        __Marshaller_google_longrunning_Operation);

    static readonly grpc::Method<global::Nsys.Api.Tacct.CreateTicketRequest, global::Nsys.Api.Tacct.CreateTicketResponse> __Method_CreateTicket = new grpc::Method<global::Nsys.Api.Tacct.CreateTicketRequest, global::Nsys.Api.Tacct.CreateTicketResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateTicket",
        __Marshaller_nsys_api_tacct_CreateTicketRequest,
        __Marshaller_nsys_api_tacct_CreateTicketResponse);

    static readonly grpc::Method<global::Nsys.Api.Tacct.CreateTicketRequest, global::Google.LongRunning.Operation> __Method_CreateTicketLRO = new grpc::Method<global::Nsys.Api.Tacct.CreateTicketRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateTicketLRO",
        __Marshaller_nsys_api_tacct_CreateTicketRequest,
        __Marshaller_google_longrunning_Operation);

    static readonly grpc::Method<global::Nsys.Api.Tacct.DeleteTicketRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteTicket = new grpc::Method<global::Nsys.Api.Tacct.DeleteTicketRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteTicket",
        __Marshaller_nsys_api_tacct_DeleteTicketRequest,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::Nsys.Api.Tacct.DeleteTicketRequest, global::Google.LongRunning.Operation> __Method_DeleteTicketLRO = new grpc::Method<global::Nsys.Api.Tacct.DeleteTicketRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteTicketLRO",
        __Marshaller_nsys_api_tacct_DeleteTicketRequest,
        __Marshaller_google_longrunning_Operation);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Nsys.Api.Tacct.TicketReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for Tickets</summary>
    public partial class TicketsClient : grpc::ClientBase<TicketsClient>
    {
      /// <summary>Creates a new client for Tickets</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public TicketsClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Tickets that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public TicketsClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected TicketsClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected TicketsClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// ListTickets returns the tickets for a subaccount or the issuer's account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Nsys.Api.Tacct.ListTicketsResponse ListTickets(global::Nsys.Api.Tacct.ListTicketsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTickets(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ListTickets returns the tickets for a subaccount or the issuer's account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Nsys.Api.Tacct.ListTicketsResponse ListTickets(global::Nsys.Api.Tacct.ListTicketsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListTickets, null, options, request);
      }
      /// <summary>
      /// ListTickets returns the tickets for a subaccount or the issuer's account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Nsys.Api.Tacct.ListTicketsResponse> ListTicketsAsync(global::Nsys.Api.Tacct.ListTicketsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTicketsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ListTickets returns the tickets for a subaccount or the issuer's account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Nsys.Api.Tacct.ListTicketsResponse> ListTicketsAsync(global::Nsys.Api.Tacct.ListTicketsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListTickets, null, options, request);
      }
      public virtual global::Google.LongRunning.Operation ListTicketsLRO(global::Nsys.Api.Tacct.ListTicketsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTicketsLRO(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.LongRunning.Operation ListTicketsLRO(global::Nsys.Api.Tacct.ListTicketsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListTicketsLRO, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ListTicketsLROAsync(global::Nsys.Api.Tacct.ListTicketsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTicketsLROAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ListTicketsLROAsync(global::Nsys.Api.Tacct.ListTicketsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListTicketsLRO, null, options, request);
      }
      /// <summary>
      /// CreateTicket creates an additional ticket for the requesting master account 
      /// or for one of its subaccounts. The ticket is immediately usable.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Nsys.Api.Tacct.CreateTicketResponse CreateTicket(global::Nsys.Api.Tacct.CreateTicketRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTicket(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// CreateTicket creates an additional ticket for the requesting master account 
      /// or for one of its subaccounts. The ticket is immediately usable.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Nsys.Api.Tacct.CreateTicketResponse CreateTicket(global::Nsys.Api.Tacct.CreateTicketRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateTicket, null, options, request);
      }
      /// <summary>
      /// CreateTicket creates an additional ticket for the requesting master account 
      /// or for one of its subaccounts. The ticket is immediately usable.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Nsys.Api.Tacct.CreateTicketResponse> CreateTicketAsync(global::Nsys.Api.Tacct.CreateTicketRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTicketAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// CreateTicket creates an additional ticket for the requesting master account 
      /// or for one of its subaccounts. The ticket is immediately usable.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Nsys.Api.Tacct.CreateTicketResponse> CreateTicketAsync(global::Nsys.Api.Tacct.CreateTicketRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateTicket, null, options, request);
      }
      public virtual global::Google.LongRunning.Operation CreateTicketLRO(global::Nsys.Api.Tacct.CreateTicketRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTicketLRO(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.LongRunning.Operation CreateTicketLRO(global::Nsys.Api.Tacct.CreateTicketRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateTicketLRO, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateTicketLROAsync(global::Nsys.Api.Tacct.CreateTicketRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTicketLROAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateTicketLROAsync(global::Nsys.Api.Tacct.CreateTicketRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateTicketLRO, null, options, request);
      }
      /// <summary>
      /// DeleteTicket deletes the specified ticket for a requesting master account
      /// or one of its subaccounts. Note: Our frontend caches ticket information. 
      /// It may take several minutes for "deleted" tickets to become unusable.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteTicket(global::Nsys.Api.Tacct.DeleteTicketRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTicket(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DeleteTicket deletes the specified ticket for a requesting master account
      /// or one of its subaccounts. Note: Our frontend caches ticket information. 
      /// It may take several minutes for "deleted" tickets to become unusable.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteTicket(global::Nsys.Api.Tacct.DeleteTicketRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteTicket, null, options, request);
      }
      /// <summary>
      /// DeleteTicket deletes the specified ticket for a requesting master account
      /// or one of its subaccounts. Note: Our frontend caches ticket information. 
      /// It may take several minutes for "deleted" tickets to become unusable.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTicketAsync(global::Nsys.Api.Tacct.DeleteTicketRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTicketAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// DeleteTicket deletes the specified ticket for a requesting master account
      /// or one of its subaccounts. Note: Our frontend caches ticket information. 
      /// It may take several minutes for "deleted" tickets to become unusable.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTicketAsync(global::Nsys.Api.Tacct.DeleteTicketRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteTicket, null, options, request);
      }
      public virtual global::Google.LongRunning.Operation DeleteTicketLRO(global::Nsys.Api.Tacct.DeleteTicketRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTicketLRO(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.LongRunning.Operation DeleteTicketLRO(global::Nsys.Api.Tacct.DeleteTicketRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteTicketLRO, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteTicketLROAsync(global::Nsys.Api.Tacct.DeleteTicketRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTicketLROAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteTicketLROAsync(global::Nsys.Api.Tacct.DeleteTicketRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteTicketLRO, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override TicketsClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new TicketsClient(configuration);
      }
    }

  }
}
#endregion
