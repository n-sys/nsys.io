// Code generated by protoc-gen-go. DO NOT EDIT.
// source: field.proto

package ntypes

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Field struct {
	// The field's identifier which must be unique within exemplar and match
	// the regex '^[0-9A-Za-z.-]{1,48}$'. Automatically generated if not
	// supplied in create requests.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Optional description for client use.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Optional meta data for client use.
	Metadata *any.Any `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// All lengths used in puzzle definition are expressed in centimeters.
	//
	// Types that are valid to be assigned to Puzzle:
	//	*Field_SignaturePresent
	//	*Field_HandwritingPresent
	Puzzle               isField_Puzzle `protobuf_oneof:"puzzle"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Field) Reset()         { *m = Field{} }
func (m *Field) String() string { return proto.CompactTextString(m) }
func (*Field) ProtoMessage()    {}
func (*Field) Descriptor() ([]byte, []int) {
	return fileDescriptor_04234ff7fdd53e6e, []int{0}
}

func (m *Field) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Field.Unmarshal(m, b)
}
func (m *Field) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Field.Marshal(b, m, deterministic)
}
func (m *Field) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Field.Merge(m, src)
}
func (m *Field) XXX_Size() int {
	return xxx_messageInfo_Field.Size(m)
}
func (m *Field) XXX_DiscardUnknown() {
	xxx_messageInfo_Field.DiscardUnknown(m)
}

var xxx_messageInfo_Field proto.InternalMessageInfo

func (m *Field) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Field) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Field) GetMetadata() *any.Any {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type isField_Puzzle interface {
	isField_Puzzle()
}

type Field_SignaturePresent struct {
	SignaturePresent *SignaturePresentPuzzle `protobuf:"bytes,10,opt,name=signature_present,json=signaturePresent,proto3,oneof"`
}

type Field_HandwritingPresent struct {
	HandwritingPresent *HandwritingPresentPuzzle `protobuf:"bytes,11,opt,name=handwriting_present,json=handwritingPresent,proto3,oneof"`
}

func (*Field_SignaturePresent) isField_Puzzle() {}

func (*Field_HandwritingPresent) isField_Puzzle() {}

func (m *Field) GetPuzzle() isField_Puzzle {
	if m != nil {
		return m.Puzzle
	}
	return nil
}

func (m *Field) GetSignaturePresent() *SignaturePresentPuzzle {
	if x, ok := m.GetPuzzle().(*Field_SignaturePresent); ok {
		return x.SignaturePresent
	}
	return nil
}

func (m *Field) GetHandwritingPresent() *HandwritingPresentPuzzle {
	if x, ok := m.GetPuzzle().(*Field_HandwritingPresent); ok {
		return x.HandwritingPresent
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Field) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Field_SignaturePresent)(nil),
		(*Field_HandwritingPresent)(nil),
	}
}

type FieldCut struct {
	// Types that are valid to be assigned to FieldCut:
	//	*FieldCut_SignaturePresent
	//	*FieldCut_HandwritingPresent
	FieldCut             isFieldCut_FieldCut `protobuf_oneof:"field_cut"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *FieldCut) Reset()         { *m = FieldCut{} }
func (m *FieldCut) String() string { return proto.CompactTextString(m) }
func (*FieldCut) ProtoMessage()    {}
func (*FieldCut) Descriptor() ([]byte, []int) {
	return fileDescriptor_04234ff7fdd53e6e, []int{1}
}

func (m *FieldCut) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldCut.Unmarshal(m, b)
}
func (m *FieldCut) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldCut.Marshal(b, m, deterministic)
}
func (m *FieldCut) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldCut.Merge(m, src)
}
func (m *FieldCut) XXX_Size() int {
	return xxx_messageInfo_FieldCut.Size(m)
}
func (m *FieldCut) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldCut.DiscardUnknown(m)
}

var xxx_messageInfo_FieldCut proto.InternalMessageInfo

type isFieldCut_FieldCut interface {
	isFieldCut_FieldCut()
}

type FieldCut_SignaturePresent struct {
	SignaturePresent *SignaturePresentCut `protobuf:"bytes,10,opt,name=signature_present,json=signaturePresent,proto3,oneof"`
}

type FieldCut_HandwritingPresent struct {
	HandwritingPresent *HandwritingPresentCut `protobuf:"bytes,11,opt,name=handwriting_present,json=handwritingPresent,proto3,oneof"`
}

func (*FieldCut_SignaturePresent) isFieldCut_FieldCut() {}

func (*FieldCut_HandwritingPresent) isFieldCut_FieldCut() {}

func (m *FieldCut) GetFieldCut() isFieldCut_FieldCut {
	if m != nil {
		return m.FieldCut
	}
	return nil
}

func (m *FieldCut) GetSignaturePresent() *SignaturePresentCut {
	if x, ok := m.GetFieldCut().(*FieldCut_SignaturePresent); ok {
		return x.SignaturePresent
	}
	return nil
}

func (m *FieldCut) GetHandwritingPresent() *HandwritingPresentCut {
	if x, ok := m.GetFieldCut().(*FieldCut_HandwritingPresent); ok {
		return x.HandwritingPresent
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FieldCut) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FieldCut_SignaturePresent)(nil),
		(*FieldCut_HandwritingPresent)(nil),
	}
}

type SolutionParameters struct {
	// Types that are valid to be assigned to Hint:
	//	*SolutionParameters_SignaturePresent
	//	*SolutionParameters_HandwritingPresent
	Hint                 isSolutionParameters_Hint `protobuf_oneof:"hint"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *SolutionParameters) Reset()         { *m = SolutionParameters{} }
func (m *SolutionParameters) String() string { return proto.CompactTextString(m) }
func (*SolutionParameters) ProtoMessage()    {}
func (*SolutionParameters) Descriptor() ([]byte, []int) {
	return fileDescriptor_04234ff7fdd53e6e, []int{2}
}

func (m *SolutionParameters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SolutionParameters.Unmarshal(m, b)
}
func (m *SolutionParameters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SolutionParameters.Marshal(b, m, deterministic)
}
func (m *SolutionParameters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SolutionParameters.Merge(m, src)
}
func (m *SolutionParameters) XXX_Size() int {
	return xxx_messageInfo_SolutionParameters.Size(m)
}
func (m *SolutionParameters) XXX_DiscardUnknown() {
	xxx_messageInfo_SolutionParameters.DiscardUnknown(m)
}

var xxx_messageInfo_SolutionParameters proto.InternalMessageInfo

type isSolutionParameters_Hint interface {
	isSolutionParameters_Hint()
}

type SolutionParameters_SignaturePresent struct {
	SignaturePresent *SignaturePresentHint `protobuf:"bytes,10,opt,name=signature_present,json=signaturePresent,proto3,oneof"`
}

type SolutionParameters_HandwritingPresent struct {
	HandwritingPresent *HandwritingPresentHint `protobuf:"bytes,11,opt,name=handwriting_present,json=handwritingPresent,proto3,oneof"`
}

func (*SolutionParameters_SignaturePresent) isSolutionParameters_Hint() {}

func (*SolutionParameters_HandwritingPresent) isSolutionParameters_Hint() {}

func (m *SolutionParameters) GetHint() isSolutionParameters_Hint {
	if m != nil {
		return m.Hint
	}
	return nil
}

func (m *SolutionParameters) GetSignaturePresent() *SignaturePresentHint {
	if x, ok := m.GetHint().(*SolutionParameters_SignaturePresent); ok {
		return x.SignaturePresent
	}
	return nil
}

func (m *SolutionParameters) GetHandwritingPresent() *HandwritingPresentHint {
	if x, ok := m.GetHint().(*SolutionParameters_HandwritingPresent); ok {
		return x.HandwritingPresent
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SolutionParameters) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SolutionParameters_SignaturePresent)(nil),
		(*SolutionParameters_HandwritingPresent)(nil),
	}
}

type FieldSolution struct {
	// Set true if the field is impossible to solve (e.g., due to a failed
	// exemplar match and bad cut)
	Unresolvable bool `protobuf:"varint,1,opt,name=unresolvable,proto3" json:"unresolvable,omitempty"`
	// Confidence in the solution in range 1 to 99.
	// A value of zero means an unknown level of confidence, not zero confidence.
	Confidence int32 `protobuf:"varint,2,opt,name=confidence,proto3" json:"confidence,omitempty"`
	// Types that are valid to be assigned to Solution:
	//	*FieldSolution_SignaturePresent
	//	*FieldSolution_HandwritingPresent
	Solution             isFieldSolution_Solution `protobuf_oneof:"solution"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *FieldSolution) Reset()         { *m = FieldSolution{} }
func (m *FieldSolution) String() string { return proto.CompactTextString(m) }
func (*FieldSolution) ProtoMessage()    {}
func (*FieldSolution) Descriptor() ([]byte, []int) {
	return fileDescriptor_04234ff7fdd53e6e, []int{3}
}

func (m *FieldSolution) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldSolution.Unmarshal(m, b)
}
func (m *FieldSolution) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldSolution.Marshal(b, m, deterministic)
}
func (m *FieldSolution) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldSolution.Merge(m, src)
}
func (m *FieldSolution) XXX_Size() int {
	return xxx_messageInfo_FieldSolution.Size(m)
}
func (m *FieldSolution) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldSolution.DiscardUnknown(m)
}

var xxx_messageInfo_FieldSolution proto.InternalMessageInfo

func (m *FieldSolution) GetUnresolvable() bool {
	if m != nil {
		return m.Unresolvable
	}
	return false
}

func (m *FieldSolution) GetConfidence() int32 {
	if m != nil {
		return m.Confidence
	}
	return 0
}

type isFieldSolution_Solution interface {
	isFieldSolution_Solution()
}

type FieldSolution_SignaturePresent struct {
	SignaturePresent *SignaturePresentSolution `protobuf:"bytes,10,opt,name=signature_present,json=signaturePresent,proto3,oneof"`
}

type FieldSolution_HandwritingPresent struct {
	HandwritingPresent *HandwritingPresentSolution `protobuf:"bytes,11,opt,name=handwriting_present,json=handwritingPresent,proto3,oneof"`
}

func (*FieldSolution_SignaturePresent) isFieldSolution_Solution() {}

func (*FieldSolution_HandwritingPresent) isFieldSolution_Solution() {}

func (m *FieldSolution) GetSolution() isFieldSolution_Solution {
	if m != nil {
		return m.Solution
	}
	return nil
}

func (m *FieldSolution) GetSignaturePresent() *SignaturePresentSolution {
	if x, ok := m.GetSolution().(*FieldSolution_SignaturePresent); ok {
		return x.SignaturePresent
	}
	return nil
}

func (m *FieldSolution) GetHandwritingPresent() *HandwritingPresentSolution {
	if x, ok := m.GetSolution().(*FieldSolution_HandwritingPresent); ok {
		return x.HandwritingPresent
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FieldSolution) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FieldSolution_SignaturePresent)(nil),
		(*FieldSolution_HandwritingPresent)(nil),
	}
}

func init() {
	proto.RegisterType((*Field)(nil), "nsys.api.ntypes.Field")
	proto.RegisterType((*FieldCut)(nil), "nsys.api.ntypes.FieldCut")
	proto.RegisterType((*SolutionParameters)(nil), "nsys.api.ntypes.SolutionParameters")
	proto.RegisterType((*FieldSolution)(nil), "nsys.api.ntypes.FieldSolution")
}

func init() { proto.RegisterFile("field.proto", fileDescriptor_04234ff7fdd53e6e) }

var fileDescriptor_04234ff7fdd53e6e = []byte{
	// 437 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x94, 0x5d, 0xaa, 0xd3, 0x40,
	0x14, 0xc7, 0x4d, 0xbd, 0xb7, 0xe4, 0x9e, 0x28, 0xea, 0x78, 0x1f, 0xe2, 0x7d, 0x90, 0x12, 0xaa,
	0x6d, 0x11, 0x26, 0xa2, 0x2b, 0xb0, 0x05, 0xe9, 0x63, 0x49, 0x45, 0xb4, 0x88, 0x65, 0x9a, 0x4c,
	0xd3, 0x81, 0x74, 0x26, 0xcc, 0x87, 0x92, 0xee, 0xc4, 0x55, 0xb8, 0x0c, 0xdf, 0x5c, 0x93, 0x74,
	0xd2, 0x68, 0x4d, 0xd3, 0x8f, 0xb7, 0x30, 0xe7, 0x97, 0xc3, 0xf9, 0xfd, 0xe7, 0x24, 0xe0, 0x2d,
	0x19, 0xcd, 0x12, 0x9c, 0x4b, 0xa1, 0x05, 0x7a, 0xc4, 0x55, 0xa1, 0x30, 0xc9, 0x19, 0xe6, 0xba,
	0xc8, 0xa9, 0xba, 0x7b, 0x96, 0x0a, 0x91, 0x66, 0x34, 0xb4, 0xe5, 0x85, 0x59, 0x86, 0x84, 0x17,
	0x25, 0x7b, 0xd7, 0xb5, 0x2c, 0x13, 0x21, 0xc9, 0x59, 0x58, 0xe2, 0xa1, 0x62, 0xe9, 0x3c, 0x97,
	0x54, 0x51, 0xae, 0x77, 0x54, 0xbf, 0x81, 0xfa, 0x2e, 0x99, 0x66, 0xbc, 0x46, 0x06, 0x3f, 0x5b,
	0x70, 0xfd, 0x7e, 0x3b, 0x0b, 0x42, 0x70, 0xc5, 0xc9, 0x9a, 0xfa, 0x4e, 0xc7, 0xe9, 0xdf, 0x44,
	0xf6, 0x19, 0x75, 0xc0, 0x4b, 0xa8, 0x8a, 0x25, 0xcb, 0x35, 0x13, 0xdc, 0x6f, 0xd9, 0xd2, 0xfe,
	0x11, 0x7a, 0x0d, 0xee, 0x9a, 0x6a, 0x92, 0x10, 0x4d, 0xfc, 0xfb, 0x1d, 0xa7, 0xef, 0xbd, 0xb9,
	0xc5, 0xe5, 0xf4, 0xb8, 0x9a, 0x1e, 0xbf, 0xe3, 0x45, 0xf4, 0x97, 0x42, 0x1f, 0xe1, 0x89, 0x62,
	0x29, 0x27, 0xda, 0x48, 0x5a, 0x0d, 0xe3, 0x83, 0x7d, 0xb5, 0x87, 0x6b, 0x49, 0xe0, 0x69, 0x45,
	0x4e, 0x4a, 0x70, 0x62, 0x36, 0x9b, 0x8c, 0x8e, 0xef, 0x45, 0x8f, 0x55, 0xad, 0x82, 0xbe, 0xc0,
	0xd3, 0x15, 0xe1, 0x49, 0x4d, 0xd3, 0xf7, 0x6c, 0xe7, 0xc1, 0x41, 0xe7, 0xf1, 0x3f, 0xb6, 0xde,
	0x1b, 0xad, 0x0e, 0x6a, 0x43, 0x17, 0xda, 0xb9, 0xad, 0x07, 0xbf, 0x1c, 0x70, 0x6d, 0x62, 0x23,
	0xa3, 0xd1, 0xf4, 0xb8, 0x4c, 0xf7, 0xac, 0xcc, 0xc8, 0xe8, 0x46, 0x93, 0xcf, 0xa7, 0x4c, 0x5e,
	0x5e, 0x60, 0x52, 0x36, 0x6e, 0xd2, 0xf0, 0xe0, 0xc6, 0x6e, 0xde, 0x3c, 0x36, 0x3a, 0xf8, 0xed,
	0x00, 0x9a, 0x8a, 0xcc, 0x6c, 0x2f, 0x72, 0x42, 0x24, 0x59, 0x53, 0x4d, 0xa5, 0x42, 0x1f, 0x8e,
	0x3b, 0xbd, 0x38, 0xeb, 0x34, 0x66, 0xbc, 0x59, 0x6a, 0x76, 0x4a, 0xaa, 0x77, 0x81, 0xd4, 0xae,
	0x73, 0x93, 0x55, 0x1b, 0xae, 0x56, 0x8c, 0xeb, 0xe0, 0x47, 0x0b, 0x1e, 0xda, 0xab, 0xa9, 0xac,
	0x50, 0x00, 0x0f, 0x0c, 0x97, 0x54, 0x89, 0xec, 0x1b, 0x59, 0x64, 0xe5, 0x72, 0xbb, 0xd1, 0x7f,
	0x67, 0xe8, 0x39, 0x40, 0x2c, 0xf8, 0x92, 0x25, 0x94, 0xc7, 0xd4, 0xee, 0xf8, 0x75, 0xb4, 0x77,
	0x82, 0x3e, 0x1d, 0xcf, 0x63, 0x70, 0x36, 0x8f, 0x6a, 0x92, 0xc6, 0x4c, 0xbe, 0x9e, 0xca, 0xe4,
	0xd5, 0x05, 0x99, 0xec, 0x75, 0x6f, 0xca, 0x05, 0xc0, 0x55, 0x3b, 0x62, 0x78, 0x3b, 0x43, 0x87,
	0x3f, 0x85, 0x45, 0xdb, 0x7e, 0xa4, 0x6f, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0x4a, 0xb9, 0xef,
	0x2f, 0x90, 0x04, 0x00, 0x00,
}
