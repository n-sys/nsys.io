// Code generated by protoc-gen-go. DO NOT EDIT.
// source: geometry.proto

package ntypes

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BoundedArea struct {
	// Types that are valid to be assigned to Shape:
	//	*BoundedArea_Rect
	//	*BoundedArea_Polygon
	//	*BoundedArea_Circle
	//	*BoundedArea_RotatedRect
	Shape                isBoundedArea_Shape `protobuf_oneof:"shape"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *BoundedArea) Reset()         { *m = BoundedArea{} }
func (m *BoundedArea) String() string { return proto.CompactTextString(m) }
func (*BoundedArea) ProtoMessage()    {}
func (*BoundedArea) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b03e188c3a7128a, []int{0}
}

func (m *BoundedArea) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BoundedArea.Unmarshal(m, b)
}
func (m *BoundedArea) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BoundedArea.Marshal(b, m, deterministic)
}
func (m *BoundedArea) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BoundedArea.Merge(m, src)
}
func (m *BoundedArea) XXX_Size() int {
	return xxx_messageInfo_BoundedArea.Size(m)
}
func (m *BoundedArea) XXX_DiscardUnknown() {
	xxx_messageInfo_BoundedArea.DiscardUnknown(m)
}

var xxx_messageInfo_BoundedArea proto.InternalMessageInfo

type isBoundedArea_Shape interface {
	isBoundedArea_Shape()
}

type BoundedArea_Rect struct {
	Rect *Rectangle `protobuf:"bytes,1,opt,name=rect,proto3,oneof"`
}

type BoundedArea_Polygon struct {
	Polygon *Polygon `protobuf:"bytes,2,opt,name=polygon,proto3,oneof"`
}

type BoundedArea_Circle struct {
	Circle *Circle `protobuf:"bytes,3,opt,name=circle,proto3,oneof"`
}

type BoundedArea_RotatedRect struct {
	RotatedRect *RotatedRectangle `protobuf:"bytes,4,opt,name=rotated_rect,json=rotatedRect,proto3,oneof"`
}

func (*BoundedArea_Rect) isBoundedArea_Shape() {}

func (*BoundedArea_Polygon) isBoundedArea_Shape() {}

func (*BoundedArea_Circle) isBoundedArea_Shape() {}

func (*BoundedArea_RotatedRect) isBoundedArea_Shape() {}

func (m *BoundedArea) GetShape() isBoundedArea_Shape {
	if m != nil {
		return m.Shape
	}
	return nil
}

func (m *BoundedArea) GetRect() *Rectangle {
	if x, ok := m.GetShape().(*BoundedArea_Rect); ok {
		return x.Rect
	}
	return nil
}

func (m *BoundedArea) GetPolygon() *Polygon {
	if x, ok := m.GetShape().(*BoundedArea_Polygon); ok {
		return x.Polygon
	}
	return nil
}

func (m *BoundedArea) GetCircle() *Circle {
	if x, ok := m.GetShape().(*BoundedArea_Circle); ok {
		return x.Circle
	}
	return nil
}

func (m *BoundedArea) GetRotatedRect() *RotatedRectangle {
	if x, ok := m.GetShape().(*BoundedArea_RotatedRect); ok {
		return x.RotatedRect
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*BoundedArea) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*BoundedArea_Rect)(nil),
		(*BoundedArea_Polygon)(nil),
		(*BoundedArea_Circle)(nil),
		(*BoundedArea_RotatedRect)(nil),
	}
}

type Point struct {
	X                    float64  `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    float64  `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Point) Reset()         { *m = Point{} }
func (m *Point) String() string { return proto.CompactTextString(m) }
func (*Point) ProtoMessage()    {}
func (*Point) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b03e188c3a7128a, []int{1}
}

func (m *Point) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Point.Unmarshal(m, b)
}
func (m *Point) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Point.Marshal(b, m, deterministic)
}
func (m *Point) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Point.Merge(m, src)
}
func (m *Point) XXX_Size() int {
	return xxx_messageInfo_Point.Size(m)
}
func (m *Point) XXX_DiscardUnknown() {
	xxx_messageInfo_Point.DiscardUnknown(m)
}

var xxx_messageInfo_Point proto.InternalMessageInfo

func (m *Point) GetX() float64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Point) GetY() float64 {
	if m != nil {
		return m.Y
	}
	return 0
}

type Line struct {
	// Defines a line segment between points A and B.
	A                    *Point   `protobuf:"bytes,1,opt,name=a,proto3" json:"a,omitempty"`
	B                    *Point   `protobuf:"bytes,2,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Line) Reset()         { *m = Line{} }
func (m *Line) String() string { return proto.CompactTextString(m) }
func (*Line) ProtoMessage()    {}
func (*Line) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b03e188c3a7128a, []int{2}
}

func (m *Line) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Line.Unmarshal(m, b)
}
func (m *Line) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Line.Marshal(b, m, deterministic)
}
func (m *Line) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Line.Merge(m, src)
}
func (m *Line) XXX_Size() int {
	return xxx_messageInfo_Line.Size(m)
}
func (m *Line) XXX_DiscardUnknown() {
	xxx_messageInfo_Line.DiscardUnknown(m)
}

var xxx_messageInfo_Line proto.InternalMessageInfo

func (m *Line) GetA() *Point {
	if m != nil {
		return m.A
	}
	return nil
}

func (m *Line) GetB() *Point {
	if m != nil {
		return m.B
	}
	return nil
}

type Size struct {
	Width                float64  `protobuf:"fixed64,1,opt,name=width,proto3" json:"width,omitempty"`
	Height               float64  `protobuf:"fixed64,2,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Size) Reset()         { *m = Size{} }
func (m *Size) String() string { return proto.CompactTextString(m) }
func (*Size) ProtoMessage()    {}
func (*Size) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b03e188c3a7128a, []int{3}
}

func (m *Size) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Size.Unmarshal(m, b)
}
func (m *Size) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Size.Marshal(b, m, deterministic)
}
func (m *Size) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Size.Merge(m, src)
}
func (m *Size) XXX_Size() int {
	return xxx_messageInfo_Size.Size(m)
}
func (m *Size) XXX_DiscardUnknown() {
	xxx_messageInfo_Size.DiscardUnknown(m)
}

var xxx_messageInfo_Size proto.InternalMessageInfo

func (m *Size) GetWidth() float64 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Size) GetHeight() float64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type RotatedRectangle struct {
	// Interpretation of rotated rectangle matches OpenCV.
	Center *Point `protobuf:"bytes,1,opt,name=center,proto3" json:"center,omitempty"`
	Size   *Size  `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	// Angle of rotation in degrees.
	Angle                float64  `protobuf:"fixed64,3,opt,name=angle,proto3" json:"angle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RotatedRectangle) Reset()         { *m = RotatedRectangle{} }
func (m *RotatedRectangle) String() string { return proto.CompactTextString(m) }
func (*RotatedRectangle) ProtoMessage()    {}
func (*RotatedRectangle) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b03e188c3a7128a, []int{4}
}

func (m *RotatedRectangle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RotatedRectangle.Unmarshal(m, b)
}
func (m *RotatedRectangle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RotatedRectangle.Marshal(b, m, deterministic)
}
func (m *RotatedRectangle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RotatedRectangle.Merge(m, src)
}
func (m *RotatedRectangle) XXX_Size() int {
	return xxx_messageInfo_RotatedRectangle.Size(m)
}
func (m *RotatedRectangle) XXX_DiscardUnknown() {
	xxx_messageInfo_RotatedRectangle.DiscardUnknown(m)
}

var xxx_messageInfo_RotatedRectangle proto.InternalMessageInfo

func (m *RotatedRectangle) GetCenter() *Point {
	if m != nil {
		return m.Center
	}
	return nil
}

func (m *RotatedRectangle) GetSize() *Size {
	if m != nil {
		return m.Size
	}
	return nil
}

func (m *RotatedRectangle) GetAngle() float64 {
	if m != nil {
		return m.Angle
	}
	return 0
}

type Rectangle struct {
	MinX                 float64  `protobuf:"fixed64,1,opt,name=min_x,json=minX,proto3" json:"min_x,omitempty"`
	MinY                 float64  `protobuf:"fixed64,2,opt,name=min_y,json=minY,proto3" json:"min_y,omitempty"`
	MaxX                 float64  `protobuf:"fixed64,3,opt,name=max_x,json=maxX,proto3" json:"max_x,omitempty"`
	MaxY                 float64  `protobuf:"fixed64,4,opt,name=max_y,json=maxY,proto3" json:"max_y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Rectangle) Reset()         { *m = Rectangle{} }
func (m *Rectangle) String() string { return proto.CompactTextString(m) }
func (*Rectangle) ProtoMessage()    {}
func (*Rectangle) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b03e188c3a7128a, []int{5}
}

func (m *Rectangle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rectangle.Unmarshal(m, b)
}
func (m *Rectangle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rectangle.Marshal(b, m, deterministic)
}
func (m *Rectangle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rectangle.Merge(m, src)
}
func (m *Rectangle) XXX_Size() int {
	return xxx_messageInfo_Rectangle.Size(m)
}
func (m *Rectangle) XXX_DiscardUnknown() {
	xxx_messageInfo_Rectangle.DiscardUnknown(m)
}

var xxx_messageInfo_Rectangle proto.InternalMessageInfo

func (m *Rectangle) GetMinX() float64 {
	if m != nil {
		return m.MinX
	}
	return 0
}

func (m *Rectangle) GetMinY() float64 {
	if m != nil {
		return m.MinY
	}
	return 0
}

func (m *Rectangle) GetMaxX() float64 {
	if m != nil {
		return m.MaxX
	}
	return 0
}

func (m *Rectangle) GetMaxY() float64 {
	if m != nil {
		return m.MaxY
	}
	return 0
}

type Polygon struct {
	// Three or more points defining the edges of a simple polygon.
	// Automatically closed.
	Points               []*Point `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Polygon) Reset()         { *m = Polygon{} }
func (m *Polygon) String() string { return proto.CompactTextString(m) }
func (*Polygon) ProtoMessage()    {}
func (*Polygon) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b03e188c3a7128a, []int{6}
}

func (m *Polygon) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Polygon.Unmarshal(m, b)
}
func (m *Polygon) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Polygon.Marshal(b, m, deterministic)
}
func (m *Polygon) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Polygon.Merge(m, src)
}
func (m *Polygon) XXX_Size() int {
	return xxx_messageInfo_Polygon.Size(m)
}
func (m *Polygon) XXX_DiscardUnknown() {
	xxx_messageInfo_Polygon.DiscardUnknown(m)
}

var xxx_messageInfo_Polygon proto.InternalMessageInfo

func (m *Polygon) GetPoints() []*Point {
	if m != nil {
		return m.Points
	}
	return nil
}

type Circle struct {
	// Defines a circular area.
	Center               *Point   `protobuf:"bytes,1,opt,name=center,proto3" json:"center,omitempty"`
	Radius               float64  `protobuf:"fixed64,2,opt,name=radius,proto3" json:"radius,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Circle) Reset()         { *m = Circle{} }
func (m *Circle) String() string { return proto.CompactTextString(m) }
func (*Circle) ProtoMessage()    {}
func (*Circle) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b03e188c3a7128a, []int{7}
}

func (m *Circle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Circle.Unmarshal(m, b)
}
func (m *Circle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Circle.Marshal(b, m, deterministic)
}
func (m *Circle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Circle.Merge(m, src)
}
func (m *Circle) XXX_Size() int {
	return xxx_messageInfo_Circle.Size(m)
}
func (m *Circle) XXX_DiscardUnknown() {
	xxx_messageInfo_Circle.DiscardUnknown(m)
}

var xxx_messageInfo_Circle proto.InternalMessageInfo

func (m *Circle) GetCenter() *Point {
	if m != nil {
		return m.Center
	}
	return nil
}

func (m *Circle) GetRadius() float64 {
	if m != nil {
		return m.Radius
	}
	return 0
}

func init() {
	proto.RegisterType((*BoundedArea)(nil), "nsys.api.ntypes.BoundedArea")
	proto.RegisterType((*Point)(nil), "nsys.api.ntypes.Point")
	proto.RegisterType((*Line)(nil), "nsys.api.ntypes.Line")
	proto.RegisterType((*Size)(nil), "nsys.api.ntypes.Size")
	proto.RegisterType((*RotatedRectangle)(nil), "nsys.api.ntypes.RotatedRectangle")
	proto.RegisterType((*Rectangle)(nil), "nsys.api.ntypes.Rectangle")
	proto.RegisterType((*Polygon)(nil), "nsys.api.ntypes.Polygon")
	proto.RegisterType((*Circle)(nil), "nsys.api.ntypes.Circle")
}

func init() { proto.RegisterFile("geometry.proto", fileDescriptor_0b03e188c3a7128a) }

var fileDescriptor_0b03e188c3a7128a = []byte{
	// 420 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0x4d, 0x6f, 0xd4, 0x30,
	0x14, 0x5c, 0xd3, 0x24, 0x2b, 0xde, 0x56, 0x80, 0x4c, 0x59, 0x22, 0x4e, 0xc5, 0x70, 0x80, 0x4b,
	0xca, 0x47, 0x2f, 0x1c, 0x59, 0x24, 0xb4, 0x07, 0x0e, 0x2b, 0x73, 0x69, 0xb9, 0x44, 0xde, 0xe4,
	0x29, 0xb1, 0xb4, 0xb1, 0x23, 0xc7, 0x15, 0x49, 0xaf, 0xfc, 0x6a, 0x6e, 0x28, 0xb6, 0xa3, 0xa2,
	0x86, 0x0f, 0xf5, 0xf8, 0xc6, 0x33, 0x79, 0x33, 0x63, 0x07, 0x1e, 0x54, 0xa8, 0x1b, 0xb4, 0x66,
	0xc8, 0x5a, 0xa3, 0xad, 0xa6, 0x0f, 0x55, 0x37, 0x74, 0x99, 0x68, 0x65, 0xa6, 0xec, 0xd0, 0x62,
	0xc7, 0x7e, 0x12, 0x58, 0x6d, 0xf4, 0x95, 0x2a, 0xb1, 0xfc, 0x68, 0x50, 0xd0, 0x37, 0x10, 0x19,
	0x2c, 0x6c, 0x4a, 0x4e, 0xc9, 0xab, 0xd5, 0xbb, 0x67, 0xd9, 0x2d, 0x7e, 0xc6, 0xb1, 0xb0, 0x42,
	0x55, 0x07, 0xdc, 0x2e, 0xb8, 0x63, 0xd2, 0x73, 0x58, 0xb6, 0xfa, 0x30, 0x54, 0x5a, 0xa5, 0xf7,
	0x9c, 0x28, 0x9d, 0x89, 0x76, 0xfe, 0x7c, 0xbb, 0xe0, 0x13, 0x95, 0xbe, 0x85, 0xa4, 0x90, 0xa6,
	0x38, 0x60, 0x7a, 0xe4, 0x44, 0x4f, 0x67, 0xa2, 0x4f, 0xee, 0x78, 0xbb, 0xe0, 0x81, 0x48, 0x3f,
	0xc3, 0xb1, 0xd1, 0x56, 0x58, 0x2c, 0x73, 0x67, 0x31, 0x72, 0xc2, 0xe7, 0x73, 0x8b, 0x9e, 0xf4,
	0xbb, 0xd3, 0x95, 0xb9, 0xc1, 0x36, 0x4b, 0x88, 0xbb, 0x5a, 0xb4, 0xc8, 0x5e, 0x40, 0xbc, 0xd3,
	0x52, 0x59, 0x7a, 0x0c, 0xa4, 0x77, 0x89, 0x09, 0x27, 0xfd, 0x38, 0x0d, 0x2e, 0x0a, 0xe1, 0x64,
	0x60, 0x1c, 0xa2, 0x2f, 0x52, 0x21, 0x7d, 0x09, 0x44, 0x84, 0x56, 0xd6, 0x7f, 0x08, 0x28, 0x95,
	0xe5, 0x44, 0x8c, 0xac, 0x7d, 0xa8, 0xe1, 0xaf, 0xac, 0x3d, 0x3b, 0x87, 0xe8, 0xab, 0xbc, 0x46,
	0x7a, 0x02, 0xf1, 0x77, 0x59, 0xda, 0x3a, 0xec, 0xf6, 0x03, 0x5d, 0x43, 0x52, 0xa3, 0xac, 0x6a,
	0x1b, 0x4c, 0x84, 0x89, 0xfd, 0x20, 0xf0, 0xe8, 0x76, 0x36, 0x9a, 0x41, 0x52, 0xa0, 0xb2, 0x68,
	0xfe, 0xe3, 0x2d, 0xb0, 0xe8, 0x6b, 0x88, 0x3a, 0x79, 0x8d, 0xc1, 0xe3, 0x93, 0x19, 0x7b, 0xf4,
	0xc5, 0x1d, 0x65, 0x74, 0xe7, 0x76, 0xb8, 0x1b, 0x22, 0xdc, 0x0f, 0x2c, 0x87, 0xfb, 0x37, 0xdb,
	0x1f, 0x43, 0xdc, 0x48, 0x95, 0x4f, 0xe5, 0x45, 0x8d, 0x54, 0x17, 0x13, 0x38, 0x75, 0x38, 0x82,
	0x97, 0x0e, 0x14, 0x7d, 0xde, 0x87, 0x8f, 0x45, 0x8d, 0xe8, 0x2f, 0x26, 0x70, 0x70, 0x57, 0xe9,
	0xc1, 0x4b, 0xf6, 0x01, 0x96, 0xe1, 0xbd, 0x8c, 0xe1, 0xda, 0xd1, 0x7d, 0x97, 0x92, 0xd3, 0xa3,
	0x7f, 0x85, 0xf3, 0x2c, 0xb6, 0x83, 0xc4, 0xbf, 0x9a, 0x3b, 0xd7, 0xb2, 0x86, 0xc4, 0x88, 0x52,
	0x5e, 0x75, 0x53, 0xe7, 0x7e, 0xda, 0x9c, 0x7c, 0xa3, 0x4e, 0x28, 0xf5, 0x99, 0x68, 0xe5, 0x99,
	0xd7, 0xee, 0x13, 0xf7, 0x33, 0xbd, 0xff, 0x15, 0x00, 0x00, 0xff, 0xff, 0x56, 0xf9, 0x01, 0xea,
	0x5e, 0x03, 0x00, 0x00,
}
