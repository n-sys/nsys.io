// Code generated by protoc-gen-go. DO NOT EDIT.
// source: account.proto

package tacct

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	longrunning "google.golang.org/genproto/googleapis/longrunning"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Account is used to hold information often needed by service methods in realtime.
type Account struct {
	// The account ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The ID of this account's master account. If id != master_id, this is a subaccount.
	MasterId string `protobuf:"bytes,2,opt,name=master_id,json=masterId,proto3" json:"master_id,omitempty"`
	// Arbitrary account description
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Methods this account is allowed to use are specified by patterns of the form
	// service/method, service/<methodPrefix>*, service/* or just the "*" character.
	// Methods without a match are denied. Patterns preceeded by a '-' (minus) cause
	// matches to be denied, i.e., one might specify patterns of "*" and "-serviceX/*"
	// to allow all services and methods except those associated with "serviceX".
	// Negation patterns are processed after positive ones.
	MethodFilters []string `protobuf:"bytes,4,rep,name=method_filters,json=methodFilters,proto3" json:"method_filters,omitempty"`
	// Account status. All values other than "ACTIVE" mean the account is blocked from
	// from API access.
	Status string `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	// Minimum retention period in hours for submitted data and transaction logs.
	RetentionHours       int32    `protobuf:"varint,6,opt,name=retention_hours,json=retentionHours,proto3" json:"retention_hours,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{0}
}

func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (m *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(m, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Account) GetMasterId() string {
	if m != nil {
		return m.MasterId
	}
	return ""
}

func (m *Account) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Account) GetMethodFilters() []string {
	if m != nil {
		return m.MethodFilters
	}
	return nil
}

func (m *Account) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Account) GetRetentionHours() int32 {
	if m != nil {
		return m.RetentionHours
	}
	return 0
}

type GetAccountRequest struct {
	// The subaccount ID being requested or, if empty, the current account.
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAccountRequest) Reset()         { *m = GetAccountRequest{} }
func (m *GetAccountRequest) String() string { return proto.CompactTextString(m) }
func (*GetAccountRequest) ProtoMessage()    {}
func (*GetAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{1}
}

func (m *GetAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccountRequest.Unmarshal(m, b)
}
func (m *GetAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccountRequest.Marshal(b, m, deterministic)
}
func (m *GetAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountRequest.Merge(m, src)
}
func (m *GetAccountRequest) XXX_Size() int {
	return xxx_messageInfo_GetAccountRequest.Size(m)
}
func (m *GetAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountRequest proto.InternalMessageInfo

func (m *GetAccountRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetAccountResponse struct {
	Account              *Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAccountResponse) Reset()         { *m = GetAccountResponse{} }
func (m *GetAccountResponse) String() string { return proto.CompactTextString(m) }
func (*GetAccountResponse) ProtoMessage()    {}
func (*GetAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{2}
}

func (m *GetAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccountResponse.Unmarshal(m, b)
}
func (m *GetAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccountResponse.Marshal(b, m, deterministic)
}
func (m *GetAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountResponse.Merge(m, src)
}
func (m *GetAccountResponse) XXX_Size() int {
	return xxx_messageInfo_GetAccountResponse.Size(m)
}
func (m *GetAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountResponse proto.InternalMessageInfo

func (m *GetAccountResponse) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

type ListAccountsRequest struct {
	// List the specified subaccounts or, if empty list, all subaccounts.
	AccountIds           []string `protobuf:"bytes,1,rep,name=account_ids,json=accountIds,proto3" json:"account_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAccountsRequest) Reset()         { *m = ListAccountsRequest{} }
func (m *ListAccountsRequest) String() string { return proto.CompactTextString(m) }
func (*ListAccountsRequest) ProtoMessage()    {}
func (*ListAccountsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{3}
}

func (m *ListAccountsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAccountsRequest.Unmarshal(m, b)
}
func (m *ListAccountsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAccountsRequest.Marshal(b, m, deterministic)
}
func (m *ListAccountsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAccountsRequest.Merge(m, src)
}
func (m *ListAccountsRequest) XXX_Size() int {
	return xxx_messageInfo_ListAccountsRequest.Size(m)
}
func (m *ListAccountsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAccountsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListAccountsRequest proto.InternalMessageInfo

func (m *ListAccountsRequest) GetAccountIds() []string {
	if m != nil {
		return m.AccountIds
	}
	return nil
}

type ListAccountsResponse struct {
	Accounts             []*Account `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListAccountsResponse) Reset()         { *m = ListAccountsResponse{} }
func (m *ListAccountsResponse) String() string { return proto.CompactTextString(m) }
func (*ListAccountsResponse) ProtoMessage()    {}
func (*ListAccountsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{4}
}

func (m *ListAccountsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAccountsResponse.Unmarshal(m, b)
}
func (m *ListAccountsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAccountsResponse.Marshal(b, m, deterministic)
}
func (m *ListAccountsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAccountsResponse.Merge(m, src)
}
func (m *ListAccountsResponse) XXX_Size() int {
	return xxx_messageInfo_ListAccountsResponse.Size(m)
}
func (m *ListAccountsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAccountsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListAccountsResponse proto.InternalMessageInfo

func (m *ListAccountsResponse) GetAccounts() []*Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

type CreateAccountRequest struct {
	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	// The subaccount inherits the requesting master account's method filters but may
	// add additional negative filters (ones beginning with "-"). See the field of the
	// same name in the Account structure.
	MethodFilters        []string `protobuf:"bytes,2,rep,name=method_filters,json=methodFilters,proto3" json:"method_filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAccountRequest) Reset()         { *m = CreateAccountRequest{} }
func (m *CreateAccountRequest) String() string { return proto.CompactTextString(m) }
func (*CreateAccountRequest) ProtoMessage()    {}
func (*CreateAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{5}
}

func (m *CreateAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAccountRequest.Unmarshal(m, b)
}
func (m *CreateAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAccountRequest.Marshal(b, m, deterministic)
}
func (m *CreateAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAccountRequest.Merge(m, src)
}
func (m *CreateAccountRequest) XXX_Size() int {
	return xxx_messageInfo_CreateAccountRequest.Size(m)
}
func (m *CreateAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAccountRequest proto.InternalMessageInfo

func (m *CreateAccountRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateAccountRequest) GetMethodFilters() []string {
	if m != nil {
		return m.MethodFilters
	}
	return nil
}

type CreateAccountResponse struct {
	Account              *Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAccountResponse) Reset()         { *m = CreateAccountResponse{} }
func (m *CreateAccountResponse) String() string { return proto.CompactTextString(m) }
func (*CreateAccountResponse) ProtoMessage()    {}
func (*CreateAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{6}
}

func (m *CreateAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAccountResponse.Unmarshal(m, b)
}
func (m *CreateAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAccountResponse.Marshal(b, m, deterministic)
}
func (m *CreateAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAccountResponse.Merge(m, src)
}
func (m *CreateAccountResponse) XXX_Size() int {
	return xxx_messageInfo_CreateAccountResponse.Size(m)
}
func (m *CreateAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAccountResponse proto.InternalMessageInfo

func (m *CreateAccountResponse) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

type DeleteAccountRequest struct {
	// The account ID of the subaccount to be marked as deleted.
	AccountId            string   `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAccountRequest) Reset()         { *m = DeleteAccountRequest{} }
func (m *DeleteAccountRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteAccountRequest) ProtoMessage()    {}
func (*DeleteAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{7}
}

func (m *DeleteAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAccountRequest.Unmarshal(m, b)
}
func (m *DeleteAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAccountRequest.Marshal(b, m, deterministic)
}
func (m *DeleteAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAccountRequest.Merge(m, src)
}
func (m *DeleteAccountRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteAccountRequest.Size(m)
}
func (m *DeleteAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAccountRequest proto.InternalMessageInfo

func (m *DeleteAccountRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func init() {
	proto.RegisterType((*Account)(nil), "nsys.api.tacct.Account")
	proto.RegisterType((*GetAccountRequest)(nil), "nsys.api.tacct.GetAccountRequest")
	proto.RegisterType((*GetAccountResponse)(nil), "nsys.api.tacct.GetAccountResponse")
	proto.RegisterType((*ListAccountsRequest)(nil), "nsys.api.tacct.ListAccountsRequest")
	proto.RegisterType((*ListAccountsResponse)(nil), "nsys.api.tacct.ListAccountsResponse")
	proto.RegisterType((*CreateAccountRequest)(nil), "nsys.api.tacct.CreateAccountRequest")
	proto.RegisterType((*CreateAccountResponse)(nil), "nsys.api.tacct.CreateAccountResponse")
	proto.RegisterType((*DeleteAccountRequest)(nil), "nsys.api.tacct.DeleteAccountRequest")
}

func init() { proto.RegisterFile("account.proto", fileDescriptor_8e28828dcb8d24f0) }

var fileDescriptor_8e28828dcb8d24f0 = []byte{
	// 532 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xdb, 0x6e, 0xd3, 0x40,
	0x10, 0xad, 0x53, 0x92, 0x26, 0x13, 0x92, 0xd2, 0x6d, 0x28, 0x96, 0xab, 0x8a, 0xb0, 0xa1, 0x22,
	0x4f, 0xb6, 0x68, 0x05, 0xef, 0x5c, 0x4b, 0xa1, 0x52, 0x24, 0x23, 0x84, 0x00, 0x09, 0xcb, 0xb5,
	0xb7, 0xe9, 0x4a, 0x89, 0xd7, 0x78, 0xd7, 0x0f, 0xfd, 0x3b, 0xfe, 0x81, 0x1f, 0x42, 0xf6, 0xae,
	0x1d, 0xdf, 0x94, 0x44, 0x7d, 0xf4, 0x99, 0x33, 0x67, 0xce, 0x5c, 0xd6, 0x30, 0x70, 0x3d, 0x8f,
	0xc5, 0x81, 0x30, 0xc3, 0x88, 0x09, 0x86, 0x86, 0x01, 0xbf, 0xe3, 0xa6, 0x1b, 0x52, 0x53, 0xb8,
	0x9e, 0x27, 0x8c, 0xc9, 0x9c, 0xb1, 0xf9, 0x82, 0x58, 0x0b, 0x16, 0xcc, 0xa3, 0x38, 0x08, 0x68,
	0x30, 0xb7, 0x58, 0x48, 0x22, 0x57, 0x50, 0x16, 0x70, 0x99, 0x64, 0x1c, 0x2b, 0x52, 0xfa, 0x75,
	0x1d, 0xdf, 0x58, 0x64, 0x19, 0x8a, 0x3b, 0x19, 0xc4, 0x7f, 0x35, 0xd8, 0x7b, 0x23, 0x6b, 0xa0,
	0x21, 0xb4, 0xa8, 0xaf, 0x6b, 0x63, 0x6d, 0xda, 0xb3, 0x5b, 0xd4, 0x47, 0xc7, 0xd0, 0x5b, 0xba,
	0x5c, 0x90, 0xc8, 0xa1, 0xbe, 0xde, 0x4a, 0xe1, 0xae, 0x04, 0x2e, 0x7d, 0x34, 0x86, 0xbe, 0x4f,
	0xb8, 0x17, 0xd1, 0x30, 0xa9, 0xa5, 0xef, 0xa6, 0xe1, 0x22, 0x84, 0x4e, 0x61, 0xb8, 0x24, 0xe2,
	0x96, 0xf9, 0xce, 0x0d, 0x5d, 0x08, 0x12, 0x71, 0xfd, 0xc1, 0x78, 0x77, 0xda, 0xb3, 0x07, 0x12,
	0xfd, 0x28, 0x41, 0x74, 0x04, 0x1d, 0x2e, 0x5c, 0x11, 0x73, 0xbd, 0x9d, 0x6a, 0xa8, 0x2f, 0xf4,
	0x02, 0xf6, 0x23, 0x22, 0x48, 0x90, 0x68, 0x39, 0xb7, 0x2c, 0x8e, 0xb8, 0xde, 0x19, 0x6b, 0xd3,
	0xb6, 0x3d, 0xcc, 0xe1, 0x4f, 0x09, 0x8a, 0x27, 0x70, 0x70, 0x41, 0x84, 0x6a, 0xc2, 0x26, 0x7f,
	0x62, 0xc2, 0x6b, 0xbd, 0xe0, 0x0b, 0x40, 0x45, 0x12, 0x0f, 0x59, 0xc0, 0x09, 0x7a, 0x09, 0x7b,
	0x6a, 0xc0, 0x29, 0xb5, 0x7f, 0xf6, 0xc4, 0x2c, 0x4f, 0xd8, 0xcc, 0x32, 0x32, 0x1e, 0x7e, 0x0d,
	0x87, 0x57, 0x94, 0x67, 0x4a, 0x3c, 0xab, 0xf7, 0x14, 0xfa, 0x8a, 0xe1, 0x50, 0x9f, 0xeb, 0x5a,
	0xda, 0x29, 0x28, 0xe8, 0xd2, 0xe7, 0xf8, 0x0b, 0x8c, 0xca, 0x79, 0xca, 0xc2, 0x39, 0x74, 0x15,
	0x4b, 0x66, 0xad, 0xf1, 0x90, 0x13, 0xb1, 0x03, 0xa3, 0x77, 0x11, 0x71, 0x05, 0xa9, 0x74, 0x5d,
	0x59, 0x8a, 0xb6, 0xcd, 0x52, 0x5a, 0x0d, 0x4b, 0xc1, 0x9f, 0xe1, 0x71, 0xa5, 0xc0, 0xfd, 0x27,
	0xf6, 0x0a, 0x46, 0xef, 0xc9, 0x82, 0xd4, 0xcc, 0x9e, 0x00, 0xac, 0x46, 0xa6, 0xbc, 0xf6, 0xf2,
	0x89, 0x9d, 0xfd, 0x6b, 0x43, 0x37, 0x9b, 0x16, 0xfa, 0x06, 0xb0, 0x5a, 0x1f, 0x7a, 0x56, 0xad,
	0x59, 0xdb, 0xbf, 0x81, 0xd7, 0x51, 0x64, 0x2f, 0x78, 0x07, 0x7d, 0x85, 0xc1, 0x0a, 0xbf, 0xb2,
	0x67, 0xdb, 0x28, 0x9f, 0x98, 0xf2, 0x3d, 0x99, 0x85, 0x47, 0x67, 0xce, 0xb2, 0x47, 0x87, 0x77,
	0xd0, 0x2f, 0x78, 0x58, 0xdc, 0x34, 0x9a, 0x54, 0x35, 0x1b, 0xee, 0xc7, 0x78, 0xbe, 0x9e, 0x94,
	0x3b, 0xfe, 0x0e, 0xfb, 0xc5, 0x48, 0xe2, 0x79, 0x2b, 0xfd, 0x8d, 0xae, 0x7f, 0xc3, 0xa0, 0xb4,
	0x71, 0x54, 0x73, 0xd4, 0x74, 0x71, 0xc6, 0xe9, 0x06, 0x56, 0x6e, 0xfc, 0x07, 0x3c, 0x2a, 0x85,
	0x12, 0xe7, 0xdb, 0x95, 0xd8, 0x68, 0x7d, 0x06, 0x83, 0xd2, 0x81, 0xd5, 0x75, 0x9b, 0xee, 0xcf,
	0x38, 0xca, 0x74, 0xb3, 0x1f, 0xa3, 0xf9, 0x21, 0xf9, 0x31, 0x4a, 0xaf, 0xa5, 0x8c, 0x46, 0xaf,
	0x8d, 0x9a, 0x9b, 0xbc, 0xbe, 0x3d, 0xfc, 0x79, 0x90, 0xea, 0x50, 0x66, 0xb9, 0x21, 0xb5, 0x52,
	0xa9, 0xeb, 0x4e, 0xea, 0xe0, 0xfc, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x82, 0x9a, 0x72, 0x98,
	0xee, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AccountsClient is the client API for Accounts service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AccountsClient interface {
	// GetAccount returns information on the requesting account or for a subaccount.
	GetAccount(ctx context.Context, in *GetAccountRequest, opts ...grpc.CallOption) (*GetAccountResponse, error)
	GetAccountLRO(ctx context.Context, in *GetAccountRequest, opts ...grpc.CallOption) (*longrunning.Operation, error)
	// ListAccounts returns information on a specified list of subaccounts or all
	// subaccounts. May only be issued by a master account.
	ListAccounts(ctx context.Context, in *ListAccountsRequest, opts ...grpc.CallOption) (*ListAccountsResponse, error)
	ListAccountsLRO(ctx context.Context, in *ListAccountsRequest, opts ...grpc.CallOption) (*longrunning.Operation, error)
	// CreateAccount may be issued by master accounts to create subaccounts.
	CreateAccount(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*CreateAccountResponse, error)
	CreateAccountLRO(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*longrunning.Operation, error)
	// DeleteAccount may be issued by master accounts to delete subaccounts.
	// All tickets associated with the specified account are also invalidated.
	// Note: Our frontend servers cache account information. It may take several
	// minutes for "deleted" accounts to actually become unusable.
	DeleteAccount(ctx context.Context, in *DeleteAccountRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteAccountLRO(ctx context.Context, in *DeleteAccountRequest, opts ...grpc.CallOption) (*longrunning.Operation, error)
}

type accountsClient struct {
	cc *grpc.ClientConn
}

func NewAccountsClient(cc *grpc.ClientConn) AccountsClient {
	return &accountsClient{cc}
}

func (c *accountsClient) GetAccount(ctx context.Context, in *GetAccountRequest, opts ...grpc.CallOption) (*GetAccountResponse, error) {
	out := new(GetAccountResponse)
	err := c.cc.Invoke(ctx, "/nsys.api.tacct.Accounts/GetAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsClient) GetAccountLRO(ctx context.Context, in *GetAccountRequest, opts ...grpc.CallOption) (*longrunning.Operation, error) {
	out := new(longrunning.Operation)
	err := c.cc.Invoke(ctx, "/nsys.api.tacct.Accounts/GetAccountLRO", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsClient) ListAccounts(ctx context.Context, in *ListAccountsRequest, opts ...grpc.CallOption) (*ListAccountsResponse, error) {
	out := new(ListAccountsResponse)
	err := c.cc.Invoke(ctx, "/nsys.api.tacct.Accounts/ListAccounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsClient) ListAccountsLRO(ctx context.Context, in *ListAccountsRequest, opts ...grpc.CallOption) (*longrunning.Operation, error) {
	out := new(longrunning.Operation)
	err := c.cc.Invoke(ctx, "/nsys.api.tacct.Accounts/ListAccountsLRO", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsClient) CreateAccount(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*CreateAccountResponse, error) {
	out := new(CreateAccountResponse)
	err := c.cc.Invoke(ctx, "/nsys.api.tacct.Accounts/CreateAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsClient) CreateAccountLRO(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*longrunning.Operation, error) {
	out := new(longrunning.Operation)
	err := c.cc.Invoke(ctx, "/nsys.api.tacct.Accounts/CreateAccountLRO", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsClient) DeleteAccount(ctx context.Context, in *DeleteAccountRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/nsys.api.tacct.Accounts/DeleteAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsClient) DeleteAccountLRO(ctx context.Context, in *DeleteAccountRequest, opts ...grpc.CallOption) (*longrunning.Operation, error) {
	out := new(longrunning.Operation)
	err := c.cc.Invoke(ctx, "/nsys.api.tacct.Accounts/DeleteAccountLRO", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AccountsServer is the server API for Accounts service.
type AccountsServer interface {
	// GetAccount returns information on the requesting account or for a subaccount.
	GetAccount(context.Context, *GetAccountRequest) (*GetAccountResponse, error)
	GetAccountLRO(context.Context, *GetAccountRequest) (*longrunning.Operation, error)
	// ListAccounts returns information on a specified list of subaccounts or all
	// subaccounts. May only be issued by a master account.
	ListAccounts(context.Context, *ListAccountsRequest) (*ListAccountsResponse, error)
	ListAccountsLRO(context.Context, *ListAccountsRequest) (*longrunning.Operation, error)
	// CreateAccount may be issued by master accounts to create subaccounts.
	CreateAccount(context.Context, *CreateAccountRequest) (*CreateAccountResponse, error)
	CreateAccountLRO(context.Context, *CreateAccountRequest) (*longrunning.Operation, error)
	// DeleteAccount may be issued by master accounts to delete subaccounts.
	// All tickets associated with the specified account are also invalidated.
	// Note: Our frontend servers cache account information. It may take several
	// minutes for "deleted" accounts to actually become unusable.
	DeleteAccount(context.Context, *DeleteAccountRequest) (*empty.Empty, error)
	DeleteAccountLRO(context.Context, *DeleteAccountRequest) (*longrunning.Operation, error)
}

// UnimplementedAccountsServer can be embedded to have forward compatible implementations.
type UnimplementedAccountsServer struct {
}

func (*UnimplementedAccountsServer) GetAccount(ctx context.Context, req *GetAccountRequest) (*GetAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccount not implemented")
}
func (*UnimplementedAccountsServer) GetAccountLRO(ctx context.Context, req *GetAccountRequest) (*longrunning.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccountLRO not implemented")
}
func (*UnimplementedAccountsServer) ListAccounts(ctx context.Context, req *ListAccountsRequest) (*ListAccountsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAccounts not implemented")
}
func (*UnimplementedAccountsServer) ListAccountsLRO(ctx context.Context, req *ListAccountsRequest) (*longrunning.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAccountsLRO not implemented")
}
func (*UnimplementedAccountsServer) CreateAccount(ctx context.Context, req *CreateAccountRequest) (*CreateAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAccount not implemented")
}
func (*UnimplementedAccountsServer) CreateAccountLRO(ctx context.Context, req *CreateAccountRequest) (*longrunning.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAccountLRO not implemented")
}
func (*UnimplementedAccountsServer) DeleteAccount(ctx context.Context, req *DeleteAccountRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAccount not implemented")
}
func (*UnimplementedAccountsServer) DeleteAccountLRO(ctx context.Context, req *DeleteAccountRequest) (*longrunning.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAccountLRO not implemented")
}

func RegisterAccountsServer(s *grpc.Server, srv AccountsServer) {
	s.RegisterService(&_Accounts_serviceDesc, srv)
}

func _Accounts_GetAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServer).GetAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsys.api.tacct.Accounts/GetAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServer).GetAccount(ctx, req.(*GetAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Accounts_GetAccountLRO_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServer).GetAccountLRO(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsys.api.tacct.Accounts/GetAccountLRO",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServer).GetAccountLRO(ctx, req.(*GetAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Accounts_ListAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAccountsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServer).ListAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsys.api.tacct.Accounts/ListAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServer).ListAccounts(ctx, req.(*ListAccountsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Accounts_ListAccountsLRO_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAccountsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServer).ListAccountsLRO(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsys.api.tacct.Accounts/ListAccountsLRO",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServer).ListAccountsLRO(ctx, req.(*ListAccountsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Accounts_CreateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServer).CreateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsys.api.tacct.Accounts/CreateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServer).CreateAccount(ctx, req.(*CreateAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Accounts_CreateAccountLRO_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServer).CreateAccountLRO(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsys.api.tacct.Accounts/CreateAccountLRO",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServer).CreateAccountLRO(ctx, req.(*CreateAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Accounts_DeleteAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServer).DeleteAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsys.api.tacct.Accounts/DeleteAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServer).DeleteAccount(ctx, req.(*DeleteAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Accounts_DeleteAccountLRO_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServer).DeleteAccountLRO(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsys.api.tacct.Accounts/DeleteAccountLRO",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServer).DeleteAccountLRO(ctx, req.(*DeleteAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Accounts_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nsys.api.tacct.Accounts",
	HandlerType: (*AccountsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAccount",
			Handler:    _Accounts_GetAccount_Handler,
		},
		{
			MethodName: "GetAccountLRO",
			Handler:    _Accounts_GetAccountLRO_Handler,
		},
		{
			MethodName: "ListAccounts",
			Handler:    _Accounts_ListAccounts_Handler,
		},
		{
			MethodName: "ListAccountsLRO",
			Handler:    _Accounts_ListAccountsLRO_Handler,
		},
		{
			MethodName: "CreateAccount",
			Handler:    _Accounts_CreateAccount_Handler,
		},
		{
			MethodName: "CreateAccountLRO",
			Handler:    _Accounts_CreateAccountLRO_Handler,
		},
		{
			MethodName: "DeleteAccount",
			Handler:    _Accounts_DeleteAccount_Handler,
		},
		{
			MethodName: "DeleteAccountLRO",
			Handler:    _Accounts_DeleteAccountLRO_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "account.proto",
}
